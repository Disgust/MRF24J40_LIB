Version 3.2 HI-TECH Software Intermediate Code
"1116 D:/Microchip/xc8/v1.31/include\pic16f88.h
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"219
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
[s S26 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S26 . SSPM CKP SSPEN SSPOV WCOL ]
[s S27 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S27 . SSPM0 SSPM1 SSPM2 SSPM3 ]
[u S25 `S26 1 `S27 1 ]
[n S25 . . . ]
"655
[v _SSPCONbits `VS25 ~T0 @X0 0 e@20 ]
[s S62 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S62 . BF UA R_nW S P D_nA CKE SMP ]
[s S63 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S63 . . R . D ]
[s S64 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S64 . . I2C_READ I2C_START I2C_STOP I2C_DATA ]
[s S65 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S65 . . nW . nA ]
[s S66 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S66 . . nWRITE . nADDRESS ]
[s S67 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S67 . . R_W . D_A ]
[s S68 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S68 . . READ_WRITE . DATA_ADDRESS ]
[u S61 `S62 1 `S63 1 `S64 1 `S65 1 `S66 1 `S67 1 `S68 1 ]
[n S61 . . . . . . . . ]
"1491
[v _SSPSTATbits `VS61 ~T0 @X0 0 e@148 ]
"629
[v _SSPBUF `Vuc ~T0 @X0 0 e@19 ]
"16 D:/Microchip/xc8/v1.31/include\assert.h
[v __fassert `(v ~T0 @X0 0 ef3`i`*Cuc`*Cuc ]
[; ;include\htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;include\htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;include\pic16f88.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 D:/Microchip/xc8/v1.31/include\pic16f88.h
[; ;include\pic16f88.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;include\pic16f88.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;include\pic16f88.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;include\pic16f88.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;include\pic16f88.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;include\pic16f88.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;include\pic16f88.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;include\pic16f88.h: 70: typedef union {
[; ;include\pic16f88.h: 71: struct {
[; ;include\pic16f88.h: 72: unsigned C :1;
[; ;include\pic16f88.h: 73: unsigned DC :1;
[; ;include\pic16f88.h: 74: unsigned Z :1;
[; ;include\pic16f88.h: 75: unsigned nPD :1;
[; ;include\pic16f88.h: 76: unsigned nTO :1;
[; ;include\pic16f88.h: 77: unsigned RP :2;
[; ;include\pic16f88.h: 78: unsigned IRP :1;
[; ;include\pic16f88.h: 79: };
[; ;include\pic16f88.h: 80: struct {
[; ;include\pic16f88.h: 81: unsigned :5;
[; ;include\pic16f88.h: 82: unsigned RP0 :1;
[; ;include\pic16f88.h: 83: unsigned RP1 :1;
[; ;include\pic16f88.h: 84: };
[; ;include\pic16f88.h: 85: struct {
[; ;include\pic16f88.h: 86: unsigned CARRY :1;
[; ;include\pic16f88.h: 87: };
[; ;include\pic16f88.h: 88: struct {
[; ;include\pic16f88.h: 89: unsigned :2;
[; ;include\pic16f88.h: 90: unsigned ZERO :1;
[; ;include\pic16f88.h: 91: };
[; ;include\pic16f88.h: 92: } STATUSbits_t;
[; ;include\pic16f88.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;include\pic16f88.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;include\pic16f88.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;include\pic16f88.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;include\pic16f88.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;include\pic16f88.h: 163: typedef union {
[; ;include\pic16f88.h: 164: struct {
[; ;include\pic16f88.h: 165: unsigned RA0 :1;
[; ;include\pic16f88.h: 166: unsigned RA1 :1;
[; ;include\pic16f88.h: 167: unsigned RA2 :1;
[; ;include\pic16f88.h: 168: unsigned RA3 :1;
[; ;include\pic16f88.h: 169: unsigned RA4 :1;
[; ;include\pic16f88.h: 170: unsigned RA5 :1;
[; ;include\pic16f88.h: 171: unsigned RA6 :1;
[; ;include\pic16f88.h: 172: unsigned RA7 :1;
[; ;include\pic16f88.h: 173: };
[; ;include\pic16f88.h: 174: } PORTAbits_t;
[; ;include\pic16f88.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;include\pic16f88.h: 219: extern volatile unsigned char PORTB @ 0x006;
"221
[; ;include\pic16f88.h: 221: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;include\pic16f88.h: 224: typedef union {
[; ;include\pic16f88.h: 225: struct {
[; ;include\pic16f88.h: 226: unsigned RB0 :1;
[; ;include\pic16f88.h: 227: unsigned RB1 :1;
[; ;include\pic16f88.h: 228: unsigned RB2 :1;
[; ;include\pic16f88.h: 229: unsigned RB3 :1;
[; ;include\pic16f88.h: 230: unsigned RB4 :1;
[; ;include\pic16f88.h: 231: unsigned RB5 :1;
[; ;include\pic16f88.h: 232: unsigned RB6 :1;
[; ;include\pic16f88.h: 233: unsigned RB7 :1;
[; ;include\pic16f88.h: 234: };
[; ;include\pic16f88.h: 235: } PORTBbits_t;
[; ;include\pic16f88.h: 236: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;include\pic16f88.h: 280: extern volatile unsigned char PCLATH @ 0x00A;
"282
[; ;include\pic16f88.h: 282: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;include\pic16f88.h: 285: typedef union {
[; ;include\pic16f88.h: 286: struct {
[; ;include\pic16f88.h: 287: unsigned PCLATH :5;
[; ;include\pic16f88.h: 288: };
[; ;include\pic16f88.h: 289: } PCLATHbits_t;
[; ;include\pic16f88.h: 290: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;include\pic16f88.h: 299: extern volatile unsigned char INTCON @ 0x00B;
"301
[; ;include\pic16f88.h: 301: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;include\pic16f88.h: 304: typedef union {
[; ;include\pic16f88.h: 305: struct {
[; ;include\pic16f88.h: 306: unsigned RBIF :1;
[; ;include\pic16f88.h: 307: unsigned INT0IF :1;
[; ;include\pic16f88.h: 308: unsigned TMR0IF :1;
[; ;include\pic16f88.h: 309: unsigned RBIE :1;
[; ;include\pic16f88.h: 310: unsigned INT0IE :1;
[; ;include\pic16f88.h: 311: unsigned TMR0IE :1;
[; ;include\pic16f88.h: 312: unsigned PEIE :1;
[; ;include\pic16f88.h: 313: unsigned GIE :1;
[; ;include\pic16f88.h: 314: };
[; ;include\pic16f88.h: 315: struct {
[; ;include\pic16f88.h: 316: unsigned :1;
[; ;include\pic16f88.h: 317: unsigned INTF :1;
[; ;include\pic16f88.h: 318: unsigned :2;
[; ;include\pic16f88.h: 319: unsigned INTE :1;
[; ;include\pic16f88.h: 320: };
[; ;include\pic16f88.h: 321: } INTCONbits_t;
[; ;include\pic16f88.h: 322: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;include\pic16f88.h: 376: extern volatile unsigned char PIR1 @ 0x00C;
"378
[; ;include\pic16f88.h: 378: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;include\pic16f88.h: 381: typedef union {
[; ;include\pic16f88.h: 382: struct {
[; ;include\pic16f88.h: 383: unsigned TMR1IF :1;
[; ;include\pic16f88.h: 384: unsigned TMR2IF :1;
[; ;include\pic16f88.h: 385: unsigned CCP1IF :1;
[; ;include\pic16f88.h: 386: unsigned SSPIF :1;
[; ;include\pic16f88.h: 387: unsigned TXIF :1;
[; ;include\pic16f88.h: 388: unsigned RCIF :1;
[; ;include\pic16f88.h: 389: unsigned ADIF :1;
[; ;include\pic16f88.h: 390: };
[; ;include\pic16f88.h: 391: } PIR1bits_t;
[; ;include\pic16f88.h: 392: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;include\pic16f88.h: 431: extern volatile unsigned char PIR2 @ 0x00D;
"433
[; ;include\pic16f88.h: 433: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;include\pic16f88.h: 436: typedef union {
[; ;include\pic16f88.h: 437: struct {
[; ;include\pic16f88.h: 438: unsigned :4;
[; ;include\pic16f88.h: 439: unsigned EEIF :1;
[; ;include\pic16f88.h: 440: unsigned :1;
[; ;include\pic16f88.h: 441: unsigned CMIF :1;
[; ;include\pic16f88.h: 442: unsigned OSFIF :1;
[; ;include\pic16f88.h: 443: };
[; ;include\pic16f88.h: 444: } PIR2bits_t;
[; ;include\pic16f88.h: 445: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;include\pic16f88.h: 464: extern volatile unsigned short TMR1 @ 0x00E;
"466
[; ;include\pic16f88.h: 466: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;include\pic16f88.h: 470: extern volatile unsigned char TMR1L @ 0x00E;
"472
[; ;include\pic16f88.h: 472: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;include\pic16f88.h: 476: extern volatile unsigned char TMR1H @ 0x00F;
"478
[; ;include\pic16f88.h: 478: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;include\pic16f88.h: 482: extern volatile unsigned char T1CON @ 0x010;
"484
[; ;include\pic16f88.h: 484: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;include\pic16f88.h: 487: typedef union {
[; ;include\pic16f88.h: 488: struct {
[; ;include\pic16f88.h: 489: unsigned TMR1ON :1;
[; ;include\pic16f88.h: 490: unsigned TMR1CS :1;
[; ;include\pic16f88.h: 491: unsigned nT1SYNC :1;
[; ;include\pic16f88.h: 492: unsigned T1OSCEN :1;
[; ;include\pic16f88.h: 493: unsigned T1CKPS :2;
[; ;include\pic16f88.h: 494: unsigned T1RUN :1;
[; ;include\pic16f88.h: 495: };
[; ;include\pic16f88.h: 496: struct {
[; ;include\pic16f88.h: 497: unsigned :2;
[; ;include\pic16f88.h: 498: unsigned T1INSYNC :1;
[; ;include\pic16f88.h: 499: unsigned :1;
[; ;include\pic16f88.h: 500: unsigned T1CKPS0 :1;
[; ;include\pic16f88.h: 501: unsigned T1CKPS1 :1;
[; ;include\pic16f88.h: 502: };
[; ;include\pic16f88.h: 503: } T1CONbits_t;
[; ;include\pic16f88.h: 504: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;include\pic16f88.h: 553: extern volatile unsigned char TMR2 @ 0x011;
"555
[; ;include\pic16f88.h: 555: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;include\pic16f88.h: 559: extern volatile unsigned char T2CON @ 0x012;
"561
[; ;include\pic16f88.h: 561: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;include\pic16f88.h: 564: typedef union {
[; ;include\pic16f88.h: 565: struct {
[; ;include\pic16f88.h: 566: unsigned T2CKPS :2;
[; ;include\pic16f88.h: 567: unsigned TMR2ON :1;
[; ;include\pic16f88.h: 568: unsigned TOUTPS :4;
[; ;include\pic16f88.h: 569: };
[; ;include\pic16f88.h: 570: struct {
[; ;include\pic16f88.h: 571: unsigned T2CKPS0 :1;
[; ;include\pic16f88.h: 572: unsigned T2CKPS1 :1;
[; ;include\pic16f88.h: 573: unsigned :1;
[; ;include\pic16f88.h: 574: unsigned TOUTPS0 :1;
[; ;include\pic16f88.h: 575: unsigned TOUTPS1 :1;
[; ;include\pic16f88.h: 576: unsigned TOUTPS2 :1;
[; ;include\pic16f88.h: 577: unsigned TOUTPS3 :1;
[; ;include\pic16f88.h: 578: };
[; ;include\pic16f88.h: 579: } T2CONbits_t;
[; ;include\pic16f88.h: 580: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;include\pic16f88.h: 629: extern volatile unsigned char SSPBUF @ 0x013;
"631
[; ;include\pic16f88.h: 631: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;include\pic16f88.h: 635: extern volatile unsigned char SSPCON @ 0x014;
"637
[; ;include\pic16f88.h: 637: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;include\pic16f88.h: 640: typedef union {
[; ;include\pic16f88.h: 641: struct {
[; ;include\pic16f88.h: 642: unsigned SSPM :4;
[; ;include\pic16f88.h: 643: unsigned CKP :1;
[; ;include\pic16f88.h: 644: unsigned SSPEN :1;
[; ;include\pic16f88.h: 645: unsigned SSPOV :1;
[; ;include\pic16f88.h: 646: unsigned WCOL :1;
[; ;include\pic16f88.h: 647: };
[; ;include\pic16f88.h: 648: struct {
[; ;include\pic16f88.h: 649: unsigned SSPM0 :1;
[; ;include\pic16f88.h: 650: unsigned SSPM1 :1;
[; ;include\pic16f88.h: 651: unsigned SSPM2 :1;
[; ;include\pic16f88.h: 652: unsigned SSPM3 :1;
[; ;include\pic16f88.h: 653: };
[; ;include\pic16f88.h: 654: } SSPCONbits_t;
[; ;include\pic16f88.h: 655: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;include\pic16f88.h: 704: extern volatile unsigned short CCPR1 @ 0x015;
"706
[; ;include\pic16f88.h: 706: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;include\pic16f88.h: 710: extern volatile unsigned char CCPR1L @ 0x015;
"712
[; ;include\pic16f88.h: 712: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;include\pic16f88.h: 716: extern volatile unsigned char CCPR1H @ 0x016;
"718
[; ;include\pic16f88.h: 718: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;include\pic16f88.h: 722: extern volatile unsigned char CCP1CON @ 0x017;
"724
[; ;include\pic16f88.h: 724: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;include\pic16f88.h: 727: typedef union {
[; ;include\pic16f88.h: 728: struct {
[; ;include\pic16f88.h: 729: unsigned CCP1M :4;
[; ;include\pic16f88.h: 730: unsigned CCP1Y :1;
[; ;include\pic16f88.h: 731: unsigned CCP1X :1;
[; ;include\pic16f88.h: 732: };
[; ;include\pic16f88.h: 733: struct {
[; ;include\pic16f88.h: 734: unsigned CCP1M0 :1;
[; ;include\pic16f88.h: 735: unsigned CCP1M1 :1;
[; ;include\pic16f88.h: 736: unsigned CCP1M2 :1;
[; ;include\pic16f88.h: 737: unsigned CCP1M3 :1;
[; ;include\pic16f88.h: 738: };
[; ;include\pic16f88.h: 739: } CCP1CONbits_t;
[; ;include\pic16f88.h: 740: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;include\pic16f88.h: 779: extern volatile unsigned char RCSTA @ 0x018;
"781
[; ;include\pic16f88.h: 781: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;include\pic16f88.h: 784: typedef union {
[; ;include\pic16f88.h: 785: struct {
[; ;include\pic16f88.h: 786: unsigned RX9D :1;
[; ;include\pic16f88.h: 787: unsigned OERR :1;
[; ;include\pic16f88.h: 788: unsigned FERR :1;
[; ;include\pic16f88.h: 789: unsigned ADDEN :1;
[; ;include\pic16f88.h: 790: unsigned CREN :1;
[; ;include\pic16f88.h: 791: unsigned SREN :1;
[; ;include\pic16f88.h: 792: unsigned RX9 :1;
[; ;include\pic16f88.h: 793: unsigned SPEN :1;
[; ;include\pic16f88.h: 794: };
[; ;include\pic16f88.h: 795: struct {
[; ;include\pic16f88.h: 796: unsigned RCD8 :1;
[; ;include\pic16f88.h: 797: unsigned :5;
[; ;include\pic16f88.h: 798: unsigned RC9 :1;
[; ;include\pic16f88.h: 799: };
[; ;include\pic16f88.h: 800: struct {
[; ;include\pic16f88.h: 801: unsigned :6;
[; ;include\pic16f88.h: 802: unsigned nRC8 :1;
[; ;include\pic16f88.h: 803: };
[; ;include\pic16f88.h: 804: struct {
[; ;include\pic16f88.h: 805: unsigned :6;
[; ;include\pic16f88.h: 806: unsigned RC8_9 :1;
[; ;include\pic16f88.h: 807: };
[; ;include\pic16f88.h: 808: } RCSTAbits_t;
[; ;include\pic16f88.h: 809: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;include\pic16f88.h: 873: extern volatile unsigned char TXREG @ 0x019;
"875
[; ;include\pic16f88.h: 875: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;include\pic16f88.h: 879: extern volatile unsigned char RCREG @ 0x01A;
"881
[; ;include\pic16f88.h: 881: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;include\pic16f88.h: 885: extern volatile unsigned char ADRESH @ 0x01E;
"887
[; ;include\pic16f88.h: 887: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;include\pic16f88.h: 891: extern volatile unsigned char ADCON0 @ 0x01F;
"893
[; ;include\pic16f88.h: 893: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;include\pic16f88.h: 896: typedef union {
[; ;include\pic16f88.h: 897: struct {
[; ;include\pic16f88.h: 898: unsigned ADON :1;
[; ;include\pic16f88.h: 899: unsigned :1;
[; ;include\pic16f88.h: 900: unsigned GO_nDONE :1;
[; ;include\pic16f88.h: 901: unsigned CHS :3;
[; ;include\pic16f88.h: 902: unsigned ADCS :2;
[; ;include\pic16f88.h: 903: };
[; ;include\pic16f88.h: 904: struct {
[; ;include\pic16f88.h: 905: unsigned :2;
[; ;include\pic16f88.h: 906: unsigned GO :1;
[; ;include\pic16f88.h: 907: unsigned CHS0 :1;
[; ;include\pic16f88.h: 908: unsigned CHS1 :1;
[; ;include\pic16f88.h: 909: unsigned CHS2 :1;
[; ;include\pic16f88.h: 910: unsigned ADCS0 :1;
[; ;include\pic16f88.h: 911: unsigned ADCS1 :1;
[; ;include\pic16f88.h: 912: };
[; ;include\pic16f88.h: 913: struct {
[; ;include\pic16f88.h: 914: unsigned :2;
[; ;include\pic16f88.h: 915: unsigned nDONE :1;
[; ;include\pic16f88.h: 916: };
[; ;include\pic16f88.h: 917: struct {
[; ;include\pic16f88.h: 918: unsigned :2;
[; ;include\pic16f88.h: 919: unsigned GO_DONE :1;
[; ;include\pic16f88.h: 920: };
[; ;include\pic16f88.h: 921: } ADCON0bits_t;
[; ;include\pic16f88.h: 922: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;include\pic16f88.h: 986: extern volatile unsigned char OPTION_REG @ 0x081;
"988
[; ;include\pic16f88.h: 988: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;include\pic16f88.h: 991: typedef union {
[; ;include\pic16f88.h: 992: struct {
[; ;include\pic16f88.h: 993: unsigned PS :3;
[; ;include\pic16f88.h: 994: unsigned PSA :1;
[; ;include\pic16f88.h: 995: unsigned T0SE :1;
[; ;include\pic16f88.h: 996: unsigned T0CS :1;
[; ;include\pic16f88.h: 997: unsigned INTEDG :1;
[; ;include\pic16f88.h: 998: unsigned nRBPU :1;
[; ;include\pic16f88.h: 999: };
[; ;include\pic16f88.h: 1000: struct {
[; ;include\pic16f88.h: 1001: unsigned PS0 :1;
[; ;include\pic16f88.h: 1002: unsigned PS1 :1;
[; ;include\pic16f88.h: 1003: unsigned PS2 :1;
[; ;include\pic16f88.h: 1004: };
[; ;include\pic16f88.h: 1005: } OPTION_REGbits_t;
[; ;include\pic16f88.h: 1006: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;include\pic16f88.h: 1055: extern volatile unsigned char TRISA @ 0x085;
"1057
[; ;include\pic16f88.h: 1057: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;include\pic16f88.h: 1060: typedef union {
[; ;include\pic16f88.h: 1061: struct {
[; ;include\pic16f88.h: 1062: unsigned TRISA0 :1;
[; ;include\pic16f88.h: 1063: unsigned TRISA1 :1;
[; ;include\pic16f88.h: 1064: unsigned TRISA2 :1;
[; ;include\pic16f88.h: 1065: unsigned TRISA3 :1;
[; ;include\pic16f88.h: 1066: unsigned TRISA4 :1;
[; ;include\pic16f88.h: 1067: unsigned TRISA5 :1;
[; ;include\pic16f88.h: 1068: unsigned TRISA6 :1;
[; ;include\pic16f88.h: 1069: unsigned TRISA7 :1;
[; ;include\pic16f88.h: 1070: };
[; ;include\pic16f88.h: 1071: } TRISAbits_t;
[; ;include\pic16f88.h: 1072: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;include\pic16f88.h: 1116: extern volatile unsigned char TRISB @ 0x086;
"1118
[; ;include\pic16f88.h: 1118: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;include\pic16f88.h: 1121: typedef union {
[; ;include\pic16f88.h: 1122: struct {
[; ;include\pic16f88.h: 1123: unsigned TRISB0 :1;
[; ;include\pic16f88.h: 1124: unsigned TRISB1 :1;
[; ;include\pic16f88.h: 1125: unsigned TRISB2 :1;
[; ;include\pic16f88.h: 1126: unsigned TRISB3 :1;
[; ;include\pic16f88.h: 1127: unsigned TRISB4 :1;
[; ;include\pic16f88.h: 1128: unsigned TRISB5 :1;
[; ;include\pic16f88.h: 1129: unsigned TRISB6 :1;
[; ;include\pic16f88.h: 1130: unsigned TRISB7 :1;
[; ;include\pic16f88.h: 1131: };
[; ;include\pic16f88.h: 1132: } TRISBbits_t;
[; ;include\pic16f88.h: 1133: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;include\pic16f88.h: 1177: extern volatile unsigned char PIE1 @ 0x08C;
"1179
[; ;include\pic16f88.h: 1179: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;include\pic16f88.h: 1182: typedef union {
[; ;include\pic16f88.h: 1183: struct {
[; ;include\pic16f88.h: 1184: unsigned TMR1IE :1;
[; ;include\pic16f88.h: 1185: unsigned TMR2IE :1;
[; ;include\pic16f88.h: 1186: unsigned CCP1IE :1;
[; ;include\pic16f88.h: 1187: unsigned SSPIE :1;
[; ;include\pic16f88.h: 1188: unsigned TXIE :1;
[; ;include\pic16f88.h: 1189: unsigned RCIE :1;
[; ;include\pic16f88.h: 1190: unsigned ADIE :1;
[; ;include\pic16f88.h: 1191: };
[; ;include\pic16f88.h: 1192: } PIE1bits_t;
[; ;include\pic16f88.h: 1193: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;include\pic16f88.h: 1232: extern volatile unsigned char PIE2 @ 0x08D;
"1234
[; ;include\pic16f88.h: 1234: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;include\pic16f88.h: 1237: typedef union {
[; ;include\pic16f88.h: 1238: struct {
[; ;include\pic16f88.h: 1239: unsigned :4;
[; ;include\pic16f88.h: 1240: unsigned EEIE :1;
[; ;include\pic16f88.h: 1241: unsigned :1;
[; ;include\pic16f88.h: 1242: unsigned CMIE :1;
[; ;include\pic16f88.h: 1243: unsigned OSFIE :1;
[; ;include\pic16f88.h: 1244: };
[; ;include\pic16f88.h: 1245: } PIE2bits_t;
[; ;include\pic16f88.h: 1246: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;include\pic16f88.h: 1265: extern volatile unsigned char PCON @ 0x08E;
"1267
[; ;include\pic16f88.h: 1267: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;include\pic16f88.h: 1270: typedef union {
[; ;include\pic16f88.h: 1271: struct {
[; ;include\pic16f88.h: 1272: unsigned nBOR :1;
[; ;include\pic16f88.h: 1273: unsigned nPOR :1;
[; ;include\pic16f88.h: 1274: };
[; ;include\pic16f88.h: 1275: struct {
[; ;include\pic16f88.h: 1276: unsigned nBO :1;
[; ;include\pic16f88.h: 1277: };
[; ;include\pic16f88.h: 1278: } PCONbits_t;
[; ;include\pic16f88.h: 1279: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;include\pic16f88.h: 1298: extern volatile unsigned char OSCCON @ 0x08F;
"1300
[; ;include\pic16f88.h: 1300: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;include\pic16f88.h: 1303: typedef union {
[; ;include\pic16f88.h: 1304: struct {
[; ;include\pic16f88.h: 1305: unsigned SCS :2;
[; ;include\pic16f88.h: 1306: unsigned IOFS :1;
[; ;include\pic16f88.h: 1307: unsigned OSTS :1;
[; ;include\pic16f88.h: 1308: unsigned IRCF :3;
[; ;include\pic16f88.h: 1309: };
[; ;include\pic16f88.h: 1310: struct {
[; ;include\pic16f88.h: 1311: unsigned SCS0 :1;
[; ;include\pic16f88.h: 1312: unsigned SCS1 :1;
[; ;include\pic16f88.h: 1313: unsigned :2;
[; ;include\pic16f88.h: 1314: unsigned IRCF0 :1;
[; ;include\pic16f88.h: 1315: unsigned IRCF1 :1;
[; ;include\pic16f88.h: 1316: unsigned IRCF2 :1;
[; ;include\pic16f88.h: 1317: };
[; ;include\pic16f88.h: 1318: } OSCCONbits_t;
[; ;include\pic16f88.h: 1319: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;include\pic16f88.h: 1368: extern volatile unsigned char OSCTUNE @ 0x090;
"1370
[; ;include\pic16f88.h: 1370: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;include\pic16f88.h: 1373: typedef union {
[; ;include\pic16f88.h: 1374: struct {
[; ;include\pic16f88.h: 1375: unsigned TUN :6;
[; ;include\pic16f88.h: 1376: };
[; ;include\pic16f88.h: 1377: struct {
[; ;include\pic16f88.h: 1378: unsigned TUN0 :1;
[; ;include\pic16f88.h: 1379: unsigned TUN1 :1;
[; ;include\pic16f88.h: 1380: unsigned TUN2 :1;
[; ;include\pic16f88.h: 1381: unsigned TUN3 :1;
[; ;include\pic16f88.h: 1382: unsigned TUN4 :1;
[; ;include\pic16f88.h: 1383: unsigned TUN5 :1;
[; ;include\pic16f88.h: 1384: };
[; ;include\pic16f88.h: 1385: } OSCTUNEbits_t;
[; ;include\pic16f88.h: 1386: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;include\pic16f88.h: 1425: extern volatile unsigned char PR2 @ 0x092;
"1427
[; ;include\pic16f88.h: 1427: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;include\pic16f88.h: 1431: extern volatile unsigned char SSPADD @ 0x093;
"1433
[; ;include\pic16f88.h: 1433: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;include\pic16f88.h: 1437: extern volatile unsigned char SSPSTAT @ 0x094;
"1439
[; ;include\pic16f88.h: 1439: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;include\pic16f88.h: 1442: typedef union {
[; ;include\pic16f88.h: 1443: struct {
[; ;include\pic16f88.h: 1444: unsigned BF :1;
[; ;include\pic16f88.h: 1445: unsigned UA :1;
[; ;include\pic16f88.h: 1446: unsigned R_nW :1;
[; ;include\pic16f88.h: 1447: unsigned S :1;
[; ;include\pic16f88.h: 1448: unsigned P :1;
[; ;include\pic16f88.h: 1449: unsigned D_nA :1;
[; ;include\pic16f88.h: 1450: unsigned CKE :1;
[; ;include\pic16f88.h: 1451: unsigned SMP :1;
[; ;include\pic16f88.h: 1452: };
[; ;include\pic16f88.h: 1453: struct {
[; ;include\pic16f88.h: 1454: unsigned :2;
[; ;include\pic16f88.h: 1455: unsigned R :1;
[; ;include\pic16f88.h: 1456: unsigned :2;
[; ;include\pic16f88.h: 1457: unsigned D :1;
[; ;include\pic16f88.h: 1458: };
[; ;include\pic16f88.h: 1459: struct {
[; ;include\pic16f88.h: 1460: unsigned :2;
[; ;include\pic16f88.h: 1461: unsigned I2C_READ :1;
[; ;include\pic16f88.h: 1462: unsigned I2C_START :1;
[; ;include\pic16f88.h: 1463: unsigned I2C_STOP :1;
[; ;include\pic16f88.h: 1464: unsigned I2C_DATA :1;
[; ;include\pic16f88.h: 1465: };
[; ;include\pic16f88.h: 1466: struct {
[; ;include\pic16f88.h: 1467: unsigned :2;
[; ;include\pic16f88.h: 1468: unsigned nW :1;
[; ;include\pic16f88.h: 1469: unsigned :2;
[; ;include\pic16f88.h: 1470: unsigned nA :1;
[; ;include\pic16f88.h: 1471: };
[; ;include\pic16f88.h: 1472: struct {
[; ;include\pic16f88.h: 1473: unsigned :2;
[; ;include\pic16f88.h: 1474: unsigned nWRITE :1;
[; ;include\pic16f88.h: 1475: unsigned :2;
[; ;include\pic16f88.h: 1476: unsigned nADDRESS :1;
[; ;include\pic16f88.h: 1477: };
[; ;include\pic16f88.h: 1478: struct {
[; ;include\pic16f88.h: 1479: unsigned :2;
[; ;include\pic16f88.h: 1480: unsigned R_W :1;
[; ;include\pic16f88.h: 1481: unsigned :2;
[; ;include\pic16f88.h: 1482: unsigned D_A :1;
[; ;include\pic16f88.h: 1483: };
[; ;include\pic16f88.h: 1484: struct {
[; ;include\pic16f88.h: 1485: unsigned :2;
[; ;include\pic16f88.h: 1486: unsigned READ_WRITE :1;
[; ;include\pic16f88.h: 1487: unsigned :2;
[; ;include\pic16f88.h: 1488: unsigned DATA_ADDRESS :1;
[; ;include\pic16f88.h: 1489: };
[; ;include\pic16f88.h: 1490: } SSPSTATbits_t;
[; ;include\pic16f88.h: 1491: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;include\pic16f88.h: 1605: extern volatile unsigned char TXSTA @ 0x098;
"1607
[; ;include\pic16f88.h: 1607: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;include\pic16f88.h: 1610: typedef union {
[; ;include\pic16f88.h: 1611: struct {
[; ;include\pic16f88.h: 1612: unsigned TX9D :1;
[; ;include\pic16f88.h: 1613: unsigned TRMT :1;
[; ;include\pic16f88.h: 1614: unsigned BRGH :1;
[; ;include\pic16f88.h: 1615: unsigned :1;
[; ;include\pic16f88.h: 1616: unsigned SYNC :1;
[; ;include\pic16f88.h: 1617: unsigned TXEN :1;
[; ;include\pic16f88.h: 1618: unsigned TX9 :1;
[; ;include\pic16f88.h: 1619: unsigned CSRC :1;
[; ;include\pic16f88.h: 1620: };
[; ;include\pic16f88.h: 1621: struct {
[; ;include\pic16f88.h: 1622: unsigned TXD8 :1;
[; ;include\pic16f88.h: 1623: unsigned :5;
[; ;include\pic16f88.h: 1624: unsigned nTX8 :1;
[; ;include\pic16f88.h: 1625: };
[; ;include\pic16f88.h: 1626: struct {
[; ;include\pic16f88.h: 1627: unsigned :6;
[; ;include\pic16f88.h: 1628: unsigned TX8_9 :1;
[; ;include\pic16f88.h: 1629: };
[; ;include\pic16f88.h: 1630: } TXSTAbits_t;
[; ;include\pic16f88.h: 1631: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;include\pic16f88.h: 1685: extern volatile unsigned char SPBRG @ 0x099;
"1687
[; ;include\pic16f88.h: 1687: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;include\pic16f88.h: 1691: extern volatile unsigned char ANSEL @ 0x09B;
"1693
[; ;include\pic16f88.h: 1693: asm("ANSEL equ 09Bh");
[; <" ANSEL equ 09Bh ;# ">
[; ;include\pic16f88.h: 1696: typedef union {
[; ;include\pic16f88.h: 1697: struct {
[; ;include\pic16f88.h: 1698: unsigned ANS0 :1;
[; ;include\pic16f88.h: 1699: unsigned ANS1 :1;
[; ;include\pic16f88.h: 1700: unsigned ANS2 :1;
[; ;include\pic16f88.h: 1701: unsigned ANS3 :1;
[; ;include\pic16f88.h: 1702: unsigned ANS4 :1;
[; ;include\pic16f88.h: 1703: unsigned ANS5 :1;
[; ;include\pic16f88.h: 1704: unsigned ANS6 :1;
[; ;include\pic16f88.h: 1705: };
[; ;include\pic16f88.h: 1706: } ANSELbits_t;
[; ;include\pic16f88.h: 1707: extern volatile ANSELbits_t ANSELbits @ 0x09B;
[; ;include\pic16f88.h: 1746: extern volatile unsigned char CMCON @ 0x09C;
"1748
[; ;include\pic16f88.h: 1748: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;include\pic16f88.h: 1751: typedef union {
[; ;include\pic16f88.h: 1752: struct {
[; ;include\pic16f88.h: 1753: unsigned CM :3;
[; ;include\pic16f88.h: 1754: unsigned CIS :1;
[; ;include\pic16f88.h: 1755: unsigned C1INV :1;
[; ;include\pic16f88.h: 1756: unsigned C2INV :1;
[; ;include\pic16f88.h: 1757: unsigned C1OUT :1;
[; ;include\pic16f88.h: 1758: unsigned C2OUT :1;
[; ;include\pic16f88.h: 1759: };
[; ;include\pic16f88.h: 1760: struct {
[; ;include\pic16f88.h: 1761: unsigned CM0 :1;
[; ;include\pic16f88.h: 1762: unsigned CM1 :1;
[; ;include\pic16f88.h: 1763: unsigned CM2 :1;
[; ;include\pic16f88.h: 1764: };
[; ;include\pic16f88.h: 1765: } CMCONbits_t;
[; ;include\pic16f88.h: 1766: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;include\pic16f88.h: 1815: extern volatile unsigned char CVRCON @ 0x09D;
"1817
[; ;include\pic16f88.h: 1817: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;include\pic16f88.h: 1820: typedef union {
[; ;include\pic16f88.h: 1821: struct {
[; ;include\pic16f88.h: 1822: unsigned CVR :4;
[; ;include\pic16f88.h: 1823: unsigned :1;
[; ;include\pic16f88.h: 1824: unsigned CVRR :1;
[; ;include\pic16f88.h: 1825: unsigned CVROE :1;
[; ;include\pic16f88.h: 1826: unsigned CVREN :1;
[; ;include\pic16f88.h: 1827: };
[; ;include\pic16f88.h: 1828: struct {
[; ;include\pic16f88.h: 1829: unsigned CVR0 :1;
[; ;include\pic16f88.h: 1830: unsigned CVR1 :1;
[; ;include\pic16f88.h: 1831: unsigned CVR2 :1;
[; ;include\pic16f88.h: 1832: unsigned CVR3 :1;
[; ;include\pic16f88.h: 1833: };
[; ;include\pic16f88.h: 1834: } CVRCONbits_t;
[; ;include\pic16f88.h: 1835: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;include\pic16f88.h: 1879: extern volatile unsigned char ADRESL @ 0x09E;
"1881
[; ;include\pic16f88.h: 1881: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;include\pic16f88.h: 1885: extern volatile unsigned char ADCON1 @ 0x09F;
"1887
[; ;include\pic16f88.h: 1887: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;include\pic16f88.h: 1890: typedef union {
[; ;include\pic16f88.h: 1891: struct {
[; ;include\pic16f88.h: 1892: unsigned :4;
[; ;include\pic16f88.h: 1893: unsigned VCFG :2;
[; ;include\pic16f88.h: 1894: unsigned ADCS2 :1;
[; ;include\pic16f88.h: 1895: unsigned ADFM :1;
[; ;include\pic16f88.h: 1896: };
[; ;include\pic16f88.h: 1897: struct {
[; ;include\pic16f88.h: 1898: unsigned :4;
[; ;include\pic16f88.h: 1899: unsigned VCFG0 :1;
[; ;include\pic16f88.h: 1900: unsigned VCFG1 :1;
[; ;include\pic16f88.h: 1901: };
[; ;include\pic16f88.h: 1902: } ADCON1bits_t;
[; ;include\pic16f88.h: 1903: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;include\pic16f88.h: 1932: extern volatile unsigned char WDTCON @ 0x105;
"1934
[; ;include\pic16f88.h: 1934: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;include\pic16f88.h: 1937: typedef union {
[; ;include\pic16f88.h: 1938: struct {
[; ;include\pic16f88.h: 1939: unsigned SWDTEN :1;
[; ;include\pic16f88.h: 1940: unsigned WDTPS :4;
[; ;include\pic16f88.h: 1941: };
[; ;include\pic16f88.h: 1942: struct {
[; ;include\pic16f88.h: 1943: unsigned SWDTE :1;
[; ;include\pic16f88.h: 1944: unsigned WDTPS0 :1;
[; ;include\pic16f88.h: 1945: unsigned WDTPS1 :1;
[; ;include\pic16f88.h: 1946: unsigned WDTPS2 :1;
[; ;include\pic16f88.h: 1947: unsigned WDTPS3 :1;
[; ;include\pic16f88.h: 1948: };
[; ;include\pic16f88.h: 1949: } WDTCONbits_t;
[; ;include\pic16f88.h: 1950: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;include\pic16f88.h: 1989: extern volatile unsigned char EEDATA @ 0x10C;
"1991
[; ;include\pic16f88.h: 1991: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;include\pic16f88.h: 1995: extern volatile unsigned char EEADR @ 0x10D;
"1997
[; ;include\pic16f88.h: 1997: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;include\pic16f88.h: 2001: extern volatile unsigned char EEDATH @ 0x10E;
"2003
[; ;include\pic16f88.h: 2003: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;include\pic16f88.h: 2007: extern volatile unsigned char EEADRH @ 0x10F;
"2009
[; ;include\pic16f88.h: 2009: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;include\pic16f88.h: 2013: extern volatile unsigned char EECON1 @ 0x18C;
"2015
[; ;include\pic16f88.h: 2015: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;include\pic16f88.h: 2018: typedef union {
[; ;include\pic16f88.h: 2019: struct {
[; ;include\pic16f88.h: 2020: unsigned RD :1;
[; ;include\pic16f88.h: 2021: unsigned WR :1;
[; ;include\pic16f88.h: 2022: unsigned WREN :1;
[; ;include\pic16f88.h: 2023: unsigned WRERR :1;
[; ;include\pic16f88.h: 2024: unsigned FREE :1;
[; ;include\pic16f88.h: 2025: unsigned :2;
[; ;include\pic16f88.h: 2026: unsigned EEPGD :1;
[; ;include\pic16f88.h: 2027: };
[; ;include\pic16f88.h: 2028: } EECON1bits_t;
[; ;include\pic16f88.h: 2029: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;include\pic16f88.h: 2063: extern volatile unsigned char EECON2 @ 0x18D;
"2065
[; ;include\pic16f88.h: 2065: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;include\pic16f88.h: 2075: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;include\pic16f88.h: 2077: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;include\pic16f88.h: 2079: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;include\pic16f88.h: 2081: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;include\pic16f88.h: 2083: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;include\pic16f88.h: 2085: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;include\pic16f88.h: 2087: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;include\pic16f88.h: 2089: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;include\pic16f88.h: 2091: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;include\pic16f88.h: 2093: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;include\pic16f88.h: 2095: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;include\pic16f88.h: 2097: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;include\pic16f88.h: 2099: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;include\pic16f88.h: 2101: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;include\pic16f88.h: 2103: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;include\pic16f88.h: 2105: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;include\pic16f88.h: 2107: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;include\pic16f88.h: 2109: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;include\pic16f88.h: 2111: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;include\pic16f88.h: 2113: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;include\pic16f88.h: 2115: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;include\pic16f88.h: 2117: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;include\pic16f88.h: 2119: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;include\pic16f88.h: 2121: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;include\pic16f88.h: 2123: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;include\pic16f88.h: 2125: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;include\pic16f88.h: 2127: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;include\pic16f88.h: 2129: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;include\pic16f88.h: 2131: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;include\pic16f88.h: 2133: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;include\pic16f88.h: 2135: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;include\pic16f88.h: 2137: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;include\pic16f88.h: 2139: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;include\pic16f88.h: 2141: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;include\pic16f88.h: 2143: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;include\pic16f88.h: 2145: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;include\pic16f88.h: 2147: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;include\pic16f88.h: 2149: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;include\pic16f88.h: 2151: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;include\pic16f88.h: 2153: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;include\pic16f88.h: 2155: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;include\pic16f88.h: 2157: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;include\pic16f88.h: 2159: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;include\pic16f88.h: 2161: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;include\pic16f88.h: 2163: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;include\pic16f88.h: 2165: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;include\pic16f88.h: 2167: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;include\pic16f88.h: 2169: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;include\pic16f88.h: 2171: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;include\pic16f88.h: 2173: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;include\pic16f88.h: 2175: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;include\pic16f88.h: 2177: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;include\pic16f88.h: 2179: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;include\pic16f88.h: 2181: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;include\pic16f88.h: 2183: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;include\pic16f88.h: 2185: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;include\pic16f88.h: 2187: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;include\pic16f88.h: 2189: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;include\pic16f88.h: 2191: extern volatile __bit FREE @ (((unsigned) &EECON1)*8) + 4;
[; ;include\pic16f88.h: 2193: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;include\pic16f88.h: 2195: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;include\pic16f88.h: 2197: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;include\pic16f88.h: 2199: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;include\pic16f88.h: 2201: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;include\pic16f88.h: 2203: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;include\pic16f88.h: 2205: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;include\pic16f88.h: 2207: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;include\pic16f88.h: 2209: extern volatile __bit INT0IE @ (((unsigned) &INTCON)*8) + 4;
[; ;include\pic16f88.h: 2211: extern volatile __bit INT0IF @ (((unsigned) &INTCON)*8) + 1;
[; ;include\pic16f88.h: 2213: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;include\pic16f88.h: 2215: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;include\pic16f88.h: 2217: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;include\pic16f88.h: 2219: extern volatile __bit IOFS @ (((unsigned) &OSCCON)*8) + 2;
[; ;include\pic16f88.h: 2221: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;include\pic16f88.h: 2223: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;include\pic16f88.h: 2225: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;include\pic16f88.h: 2227: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;include\pic16f88.h: 2229: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;include\pic16f88.h: 2231: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;include\pic16f88.h: 2233: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;include\pic16f88.h: 2235: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;include\pic16f88.h: 2237: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;include\pic16f88.h: 2239: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;include\pic16f88.h: 2241: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;include\pic16f88.h: 2243: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;include\pic16f88.h: 2245: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;include\pic16f88.h: 2247: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;include\pic16f88.h: 2249: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;include\pic16f88.h: 2251: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;include\pic16f88.h: 2253: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;include\pic16f88.h: 2255: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;include\pic16f88.h: 2257: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;include\pic16f88.h: 2259: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;include\pic16f88.h: 2261: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;include\pic16f88.h: 2263: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;include\pic16f88.h: 2265: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;include\pic16f88.h: 2267: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;include\pic16f88.h: 2269: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;include\pic16f88.h: 2271: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;include\pic16f88.h: 2273: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;include\pic16f88.h: 2275: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;include\pic16f88.h: 2277: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;include\pic16f88.h: 2279: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;include\pic16f88.h: 2281: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;include\pic16f88.h: 2283: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;include\pic16f88.h: 2285: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;include\pic16f88.h: 2287: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;include\pic16f88.h: 2289: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;include\pic16f88.h: 2291: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;include\pic16f88.h: 2293: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;include\pic16f88.h: 2295: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;include\pic16f88.h: 2297: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;include\pic16f88.h: 2299: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;include\pic16f88.h: 2301: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;include\pic16f88.h: 2303: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;include\pic16f88.h: 2305: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;include\pic16f88.h: 2307: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;include\pic16f88.h: 2309: extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;
[; ;include\pic16f88.h: 2311: extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;
[; ;include\pic16f88.h: 2313: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;include\pic16f88.h: 2315: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;include\pic16f88.h: 2317: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;include\pic16f88.h: 2319: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;include\pic16f88.h: 2321: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;include\pic16f88.h: 2323: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;include\pic16f88.h: 2325: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;include\pic16f88.h: 2327: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;include\pic16f88.h: 2329: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;include\pic16f88.h: 2331: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;include\pic16f88.h: 2333: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;include\pic16f88.h: 2335: extern volatile __bit SWDTE @ (((unsigned) &WDTCON)*8) + 0;
[; ;include\pic16f88.h: 2337: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;include\pic16f88.h: 2339: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;include\pic16f88.h: 2341: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;include\pic16f88.h: 2343: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;include\pic16f88.h: 2345: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;include\pic16f88.h: 2347: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;include\pic16f88.h: 2349: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;include\pic16f88.h: 2351: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;include\pic16f88.h: 2353: extern volatile __bit T1RUN @ (((unsigned) &T1CON)*8) + 6;
[; ;include\pic16f88.h: 2355: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;include\pic16f88.h: 2357: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;include\pic16f88.h: 2359: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;include\pic16f88.h: 2361: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;include\pic16f88.h: 2363: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;include\pic16f88.h: 2365: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;include\pic16f88.h: 2367: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;include\pic16f88.h: 2369: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;include\pic16f88.h: 2371: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;include\pic16f88.h: 2373: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;include\pic16f88.h: 2375: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;include\pic16f88.h: 2377: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;include\pic16f88.h: 2379: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;include\pic16f88.h: 2381: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;include\pic16f88.h: 2383: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;include\pic16f88.h: 2385: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;include\pic16f88.h: 2387: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;include\pic16f88.h: 2389: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;include\pic16f88.h: 2391: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;include\pic16f88.h: 2393: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;include\pic16f88.h: 2395: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;include\pic16f88.h: 2397: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;include\pic16f88.h: 2399: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;include\pic16f88.h: 2401: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;include\pic16f88.h: 2403: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;include\pic16f88.h: 2405: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;include\pic16f88.h: 2407: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;include\pic16f88.h: 2409: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;include\pic16f88.h: 2411: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;include\pic16f88.h: 2413: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;include\pic16f88.h: 2415: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;include\pic16f88.h: 2417: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;include\pic16f88.h: 2419: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;include\pic16f88.h: 2421: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;include\pic16f88.h: 2423: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;include\pic16f88.h: 2425: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;include\pic16f88.h: 2427: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;include\pic16f88.h: 2429: extern volatile __bit TUN5 @ (((unsigned) &OSCTUNE)*8) + 5;
[; ;include\pic16f88.h: 2431: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;include\pic16f88.h: 2433: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;include\pic16f88.h: 2435: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;include\pic16f88.h: 2437: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;include\pic16f88.h: 2439: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;include\pic16f88.h: 2441: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;include\pic16f88.h: 2443: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;include\pic16f88.h: 2445: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;include\pic16f88.h: 2447: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;include\pic16f88.h: 2449: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;include\pic16f88.h: 2451: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;include\pic16f88.h: 2453: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;include\pic16f88.h: 2455: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;include\pic16f88.h: 2457: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;include\pic16f88.h: 2459: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;include\pic16f88.h: 2461: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;include\pic16f88.h: 2463: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;include\pic16f88.h: 2465: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;include\pic16f88.h: 2467: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;include\pic16f88.h: 2469: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;include\pic16f88.h: 2471: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;include\pic16f88.h: 2473: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;include\pic16f88.h: 2475: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;include\pic16f88.h: 2477: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;include\pic16f88.h: 2479: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;include\pic16f88.h: 2481: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;include\pic16f88.h: 2483: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;include\pic16f88.h: 2485: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;include\pic16f88.h: 2487: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;include\pic16f88.h: 2489: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;include\pic16f88.h: 2491: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;include\pic16f88.h: 2493: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;include\pic16f88.h: 2495: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;include\pic.h: 28: extern void __nop(void);
[; ;include\pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;include\eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;include\eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;include\eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;include\eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;include\pic.h: 154: extern __nonreentrant void _delay(unsigned long);
[; ;include\stdbool.h: 12: typedef unsigned char bool;
[; ;include\stdint.h: 13: typedef signed char int8_t;
[; ;include\stdint.h: 20: typedef signed int int16_t;
[; ;include\stdint.h: 28: typedef signed short long int int24_t;
[; ;include\stdint.h: 36: typedef signed long int int32_t;
[; ;include\stdint.h: 43: typedef unsigned char uint8_t;
[; ;include\stdint.h: 49: typedef unsigned int uint16_t;
[; ;include\stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;include\stdint.h: 63: typedef unsigned long int uint32_t;
[; ;include\stdint.h: 71: typedef signed char int_least8_t;
[; ;include\stdint.h: 78: typedef signed int int_least16_t;
[; ;include\stdint.h: 90: typedef signed short long int int_least24_t;
[; ;include\stdint.h: 98: typedef signed long int int_least32_t;
[; ;include\stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;include\stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;include\stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;include\stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;include\stdint.h: 137: typedef signed char int_fast8_t;
[; ;include\stdint.h: 144: typedef signed int int_fast16_t;
[; ;include\stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;include\stdint.h: 164: typedef signed long int int_fast32_t;
[; ;include\stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;include\stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;include\stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;include\stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;include\stdint.h: 200: typedef int32_t intmax_t;
[; ;include\stdint.h: 205: typedef uint32_t uintmax_t;
[; ;include\stdint.h: 210: typedef int16_t intptr_t;
[; ;include\stdint.h: 215: typedef uint16_t uintptr_t;
[; ;include\assert.h: 16: extern void _fassert(int, const char *, const char *);
"803 MRF24J40.h
[v _aTurnaroundTime `uc ~T0 @X0 1 e ]
[i _aTurnaroundTime
-> -> 12 `i `uc
]
[; ;MRF24J40.h: 803: uint8_t aTurnaroundTime= 12;
"804
[v _aMinLIFSPeriod `uc ~T0 @X0 1 e ]
[i _aMinLIFSPeriod
-> -> 40 `i `uc
]
[; ;MRF24J40.h: 804: uint8_t aMinLIFSPeriod= 40;
"805
[v _aMinSIFSPeriod `uc ~T0 @X0 1 e ]
[i _aMinSIFSPeriod
-> -> 12 `i `uc
]
[; ;MRF24J40.h: 805: uint8_t aMinSIFSPeriod= 12;
[; ;MRF24J40.h: 814: void SPI_Init(void);
[; ;MRF24J40.h: 815: inline void chipSelect(void);
[; ;MRF24J40.h: 816: inline void chipRelease(void);
[; ;MRF24J40.h: 817: inline void waitForSPI(void);
[; ;MRF24J40.h: 818: void SPI_WriteByte(uint8_t);
[; ;MRF24J40.h: 819: uint8_t SPI_ReadByte(uint8_t);
[; ;MRF24J40.h: 820: void SPI_WriteArray(uint8_t, uint8_t, uint8_t*);
[; ;MRF24J40.h: 821: void SPI_ReadArray(uint8_t, uint8_t, uint8_t*);
[; ;MRF24J40.h: 825: void addrWriteSA(uint8_t, uint8_t);
[; ;MRF24J40.h: 826: uint8_t byteReadSA(uint8_t);
[; ;MRF24J40.h: 827: void byteWriteSA(uint8_t, uint8_t);
[; ;MRF24J40.h: 828: void bitWriteSA(uint8_t, uint8_t, bool);
[; ;MRF24J40.h: 829: void dataReadSA(uint8_t, uint8_t, uint8_t*);
[; ;MRF24J40.h: 830: void dataWriteSA(uint8_t, uint8_t, uint8_t*);
[; ;MRF24J40.h: 832: void addrWriteLA(uint16_t, uint8_t);
[; ;MRF24J40.h: 833: uint8_t byteReadLA(uint16_t);
[; ;MRF24J40.h: 834: void byteWriteLA(uint16_t, uint8_t);
[; ;MRF24J40.h: 835: void bitWriteLA(uint16_t, uint8_t, bool);
[; ;MRF24J40.h: 836: void dataReadLA(uint16_t, uint8_t, uint8_t*);
[; ;MRF24J40.h: 837: void dataWriteLA(uint16_t, uint8_t, uint8_t*);
[; ;MRF24J40.h: 840: void macBeaconOrder(uint8_t);
[; ;MRF24J40.h: 841: void macSuperframeOrder(uint8_t);
[; ;MRF24J40.h: 842: void macMinBE(uint8_t);
[; ;MRF24J40.h: 843: void macMaxCSMABackoff(uint8_t);
[; ;MRF24J40.h: 844: void macAckWaitDuration(uint8_t);
[; ;MRF24J40.h: 847: void deviceReset();
[; ;MRF24J40.h: 848: void deviceInit();
[; ;MRF24J40.h: 849: void deviceSetInterrupt(uint8_t, bool);
[; ;MRF24J40.h: 850: void channelSelect(uint8_t);
[; ;MRF24J40.h: 851: void clearChannelAssesstment(uint8_t);
[; ;MRF24J40.h: 852: void setRSSIMode(uint8_t);
[; ;MRF24J40.h: 853: uint8_t readRSSI();
[; ;MRF24J40.h: 854: void deviceSetAddress(uint32_t, uint32_t);
[; ;MRF24J40.h: 855: void deviceSetShortAddress(uint8_t);
[; ;MRF24J40.h: 856: void setBattThreshold(uint8_t);
[; ;MRF24J40.h: 857: void battLifeExt();
[; ;MRF24J40.h: 858: void noBattLifeExt();
[; ;MRF24J40.h: 859: void setSecurityChipher(uint8_t);
"7 MRF24J40.c
[v _SPI_Init `(v ~T0 @X0 1 ef ]
"8
{
[; ;MRF24J40.c: 7: void SPI_Init()
[; ;MRF24J40.c: 8: {
[e :U _SPI_Init ]
[f ]
[; ;MRF24J40.c: 10: TRISB&= ~(1 << 5)&~(1<<2)&~(1<<4);
"10
[e =& _TRISB -> & & ~ << -> 1 `i -> 5 `i ~ << -> 1 `i -> 2 `i ~ << -> 1 `i -> 4 `i `uc ]
[; ;MRF24J40.c: 11: TRISB|= (1 << 1);
"11
[e =| _TRISB -> << -> 1 `i -> 1 `i `uc ]
[; ;MRF24J40.c: 12: PORTB|= (1 << 5);
"12
[e =| _PORTB -> << -> 1 `i -> 5 `i `uc ]
[; ;MRF24J40.c: 15: SSPCONbits.SSPEN= 1;
"15
[e = . . _SSPCONbits 0 2 -> -> 1 `i `uc ]
[; ;MRF24J40.c: 16: SSPCONbits.SSPM0= 1;
"16
[e = . . _SSPCONbits 1 0 -> -> 1 `i `uc ]
[; ;MRF24J40.c: 17: SSPSTATbits.SMP= 1;
"17
[e = . . _SSPSTATbits 0 7 -> -> 1 `i `uc ]
[; ;MRF24J40.c: 18: SSPSTATbits.CKE= 0;
"18
[e = . . _SSPSTATbits 0 6 -> -> 0 `i `uc ]
[; ;MRF24J40.c: 19: }
"19
[e :UE 89 ]
}
[v F1015 `(v ~T0 @X0 1 tf ]
"21
[v _chipSelect `TF1015 ~T0 @X0 1 e ]
{
[; ;MRF24J40.c: 21: inline void chipSelect(){
[e :U _chipSelect ]
[f ]
[; ;MRF24J40.c: 22: PORTB &= ~(1<<5);
"22
[e =& _PORTB -> ~ << -> 1 `i -> 5 `i `uc ]
[; ;MRF24J40.c: 23: }
"23
[e :UE 90 ]
}
[v F1018 `(v ~T0 @X0 1 tf ]
"25
[v _chipRelease `TF1018 ~T0 @X0 1 e ]
{
[; ;MRF24J40.c: 25: inline void chipRelease(){
[e :U _chipRelease ]
[f ]
[; ;MRF24J40.c: 26: PORTB |= (1<<5);
"26
[e =| _PORTB -> << -> 1 `i -> 5 `i `uc ]
[; ;MRF24J40.c: 27: }
"27
[e :UE 91 ]
}
"29
[v _SPI_WriteByte `(v ~T0 @X0 1 ef1`uc ]
"30
{
[; ;MRF24J40.c: 29: void SPI_WriteByte(uint8_t data)
[; ;MRF24J40.c: 30: {
[e :U _SPI_WriteByte ]
"29
[v _data `uc ~T0 @X0 1 r1 ]
"30
[f ]
[; ;MRF24J40.c: 31: chipSelect();
"31
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 32: SSPBUF = data;
"32
[e = _SSPBUF _data ]
[; ;MRF24J40.c: 33: while(SSPSTATbits.BF);
"33
[e $U 93  ]
[e :U 94 ]
[e :U 93 ]
[e $ != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 94  ]
[e :U 95 ]
[; ;MRF24J40.c: 34: chipRelease();
"34
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 35: }
"35
[e :UE 92 ]
}
"37
[v _SPI_ReadByte `(uc ~T0 @X0 1 ef1`uc ]
"38
{
[; ;MRF24J40.c: 37: uint8_t SPI_ReadByte(uint8_t addr)
[; ;MRF24J40.c: 38: {
[e :U _SPI_ReadByte ]
"37
[v _addr `uc ~T0 @X0 1 r1 ]
"38
[f ]
"39
[v _report `uc ~T0 @X0 1 a ]
[; ;MRF24J40.c: 39: uint8_t report;
[; ;MRF24J40.c: 40: chipSelect();
"40
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 41: SSPBUF = addr;
"41
[e = _SSPBUF _addr ]
[; ;MRF24J40.c: 42: while(SSPSTATbits.BF);
"42
[e $U 97  ]
[e :U 98 ]
[e :U 97 ]
[e $ != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 98  ]
[e :U 99 ]
[; ;MRF24J40.c: 43: report = SSPBUF;
"43
[e = _report _SSPBUF ]
[; ;MRF24J40.c: 44: chipRelease();
"44
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 46: return report;
"46
[e ) _report ]
[e $UE 96  ]
[; ;MRF24J40.c: 47: }
"47
[e :UE 96 ]
}
"49
[v _SPI_WriteArray `(v ~T0 @X0 1 ef3`uc`uc`*uc ]
"50
{
[; ;MRF24J40.c: 49: void SPI_WriteArray(uint8_t command, uint8_t num, uint8_t *buffer)
[; ;MRF24J40.c: 50: {
[e :U _SPI_WriteArray ]
"49
[v _command `uc ~T0 @X0 1 r1 ]
[v _num `uc ~T0 @X0 1 r2 ]
[v _buffer `*uc ~T0 @X0 1 r3 ]
"50
[f ]
[; ;MRF24J40.c: 51: chipSelect();
"51
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 52: SPI_WriteByte(command);
"52
[e ( _SPI_WriteByte (1 _command ]
[; ;MRF24J40.c: 53: while(SSPSTATbits.BF);
"53
[e $U 101  ]
[e :U 102 ]
[e :U 101 ]
[e $ != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 102  ]
[e :U 103 ]
[; ;MRF24J40.c: 54: while(num--){
"54
[e $U 104  ]
[e :U 105 ]
{
[; ;MRF24J40.c: 55: SSPBUF = *buffer++;
"55
[e = _SSPBUF *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x ]
[; ;MRF24J40.c: 56: while(SSPSTATbits.BF);
"56
[e $U 107  ]
[e :U 108 ]
[e :U 107 ]
[e $ != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 108  ]
[e :U 109 ]
"57
}
[e :U 104 ]
"54
[e $ != -> -- _num -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 105  ]
[e :U 106 ]
[; ;MRF24J40.c: 57: }
[; ;MRF24J40.c: 58: chipRelease();
"58
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 59: }
"59
[e :UE 100 ]
}
"61
[v _SPI_ReadArray `(v ~T0 @X0 1 ef3`uc`uc`*uc ]
"62
{
[; ;MRF24J40.c: 61: void SPI_ReadArray(uint8_t command, uint8_t num, uint8_t *buffer)
[; ;MRF24J40.c: 62: {
[e :U _SPI_ReadArray ]
"61
[v _command `uc ~T0 @X0 1 r1 ]
[v _num `uc ~T0 @X0 1 r2 ]
[v _buffer `*uc ~T0 @X0 1 r3 ]
"62
[f ]
[; ;MRF24J40.c: 63: chipSelect();
"63
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 64: SPI_WriteByte(command);
"64
[e ( _SPI_WriteByte (1 _command ]
[; ;MRF24J40.c: 65: while(SSPSTATbits.BF);
"65
[e $U 111  ]
[e :U 112 ]
[e :U 111 ]
[e $ != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 112  ]
[e :U 113 ]
[; ;MRF24J40.c: 66: while(num--){
"66
[e $U 114  ]
[e :U 115 ]
{
[; ;MRF24J40.c: 68: while(SSPSTATbits.BF);
"68
[e $U 117  ]
[e :U 118 ]
[e :U 117 ]
[e $ != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 118  ]
[e :U 119 ]
[; ;MRF24J40.c: 69: *buffer++ = SSPBUF;
"69
[e = *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x _SSPBUF ]
"70
}
[e :U 114 ]
"66
[e $ != -> -- _num -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 115  ]
[e :U 116 ]
[; ;MRF24J40.c: 70: }
[; ;MRF24J40.c: 71: chipRelease();
"71
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 72: }
"72
[e :UE 110 ]
}
[v F1021 `(v ~T0 @X0 1 tf ]
"74
[v _waitForSPI `TF1021 ~T0 @X0 1 e ]
{
[; ;MRF24J40.c: 74: inline void waitForSPI(){
[e :U _waitForSPI ]
[f ]
[; ;MRF24J40.c: 75: while(SSPSTATbits.BF);
"75
[e $U 121  ]
[e :U 122 ]
[e :U 121 ]
[e $ != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 122  ]
[e :U 123 ]
[; ;MRF24J40.c: 76: }
"76
[e :UE 120 ]
}
"80
[v _addrWriteSA `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;MRF24J40.c: 80: void addrWriteSA(uint8_t addr, uint8_t op) {
[e :U _addrWriteSA ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _op `uc ~T0 @X0 1 r2 ]
[f ]
[; ;MRF24J40.c: 82: if(!(addr < 0x3F)) {_fassert(82, "MRF24J40.c", "addr < 0x3F");};
"82
[e $ ! ! < -> _addr `i -> 63 `i 125  ]
{
[e ( __fassert (3 , , -> 82 `i :s 1C :s 2C ]
}
[e :U 125 ]
"83
[v _command `uc ~T0 @X0 1 a ]
[; ;MRF24J40.c: 83: uint8_t command= (op?(((addr<<1) )|0b00000001):(((addr<<1)&0b01111111)&0b11111110));
[e = _command -> ? != -> _op `i -> -> -> 0 `i `uc `i : | << -> _addr `i -> 1 `i -> 1 `i & & << -> _addr `i -> 1 `i -> 127 `i -> 254 `i `uc ]
[; ;MRF24J40.c: 84: SSPBUF= command;
"84
[e = _SSPBUF _command ]
[; ;MRF24J40.c: 85: waitForSPI();
"85
[e ( _waitForSPI ..  ]
[; ;MRF24J40.c: 86: }
"86
[e :UE 124 ]
}
"88
[v _addrWriteLA `(v ~T0 @X0 1 ef2`ui`uc ]
{
[; ;MRF24J40.c: 88: void addrWriteLA(uint16_t addr, uint8_t op) {
[e :U _addrWriteLA ]
[v _addr `ui ~T0 @X0 1 r1 ]
[v _op `uc ~T0 @X0 1 r2 ]
[f ]
[; ;MRF24J40.c: 90: if(!(addr < 0x38F)) {_fassert(90, "MRF24J40.c", "addr < 0x38F");};
"90
[e $ ! ! < _addr -> -> 911 `i `ui 127  ]
{
[e ( __fassert (3 , , -> 90 `i :s 3C :s 4C ]
}
[e :U 127 ]
"91
[v _command `ui ~T0 @X0 1 a ]
[; ;MRF24J40.c: 91: uint16_t command= (op?(((addr<<1)&0b100000000000)|0b000000000001):(((addr<<1)|0b100000000000 )));
[e = _command ? != -> _op `i -> -> -> 0 `i `uc `i : | & << _addr -> 1 `i -> -> 2048 `i `ui -> -> 1 `i `ui | << _addr -> 1 `i -> -> 2048 `i `ui ]
[; ;MRF24J40.c: 92: SSPBUF= (command>>8);
"92
[e = _SSPBUF -> >> _command -> 8 `i `uc ]
[; ;MRF24J40.c: 93: waitForSPI();
"93
[e ( _waitForSPI ..  ]
[; ;MRF24J40.c: 94: SSPBUF= (command&0xFF);
"94
[e = _SSPBUF -> & _command -> -> 255 `i `ui `uc ]
[; ;MRF24J40.c: 95: waitForSPI();
"95
[e ( _waitForSPI ..  ]
[; ;MRF24J40.c: 96: }
"96
[e :UE 126 ]
}
"98
[v _byteReadSA `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;MRF24J40.c: 98: uint8_t byteReadSA(uint8_t addr){
[e :U _byteReadSA ]
[v _addr `uc ~T0 @X0 1 r1 ]
[f ]
"99
[v _report `uc ~T0 @X0 1 a ]
[; ;MRF24J40.c: 99: uint8_t report;
[; ;MRF24J40.c: 100: chipSelect();
"100
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 101: addrWriteSA(addr, 1);
"101
[e ( _addrWriteSA (2 , _addr -> -> 1 `i `uc ]
[; ;MRF24J40.c: 102: report = SSPBUF;
"102
[e = _report _SSPBUF ]
[; ;MRF24J40.c: 103: chipRelease();
"103
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 104: return report;
"104
[e ) _report ]
[e $UE 128  ]
[; ;MRF24J40.c: 105: }
"105
[e :UE 128 ]
}
"107
[v _byteWriteSA `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;MRF24J40.c: 107: void byteWriteSA(uint8_t addr, uint8_t data){
[e :U _byteWriteSA ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
[; ;MRF24J40.c: 108: chipSelect();
"108
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 109: addrWriteSA(addr, 0);
"109
[e ( _addrWriteSA (2 , _addr -> -> 0 `i `uc ]
[; ;MRF24J40.c: 110: SSPBUF= data;
"110
[e = _SSPBUF _data ]
[; ;MRF24J40.c: 111: waitForSPI();
"111
[e ( _waitForSPI ..  ]
[; ;MRF24J40.c: 112: chipRelease();
"112
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 113: }
"113
[e :UE 129 ]
}
"115
[v _bitWriteSA `(v ~T0 @X0 1 ef3`uc`uc`uc ]
{
[; ;MRF24J40.c: 115: void bitWriteSA(uint8_t addr, uint8_t bitname, bool state) {
[e :U _bitWriteSA ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _bitname `uc ~T0 @X0 1 r2 ]
[v _state `uc ~T0 @X0 1 r3 ]
[f ]
"116
[v _temp `uc ~T0 @X0 1 a ]
[; ;MRF24J40.c: 116: uint8_t temp= byteReadSA(addr);
[e = _temp ( _byteReadSA (1 _addr ]
[; ;MRF24J40.c: 117: state?(temp|=(1<<bitname)):(temp&=~(1<<bitname));
"117
[e ? != -> _state `i -> -> -> 0 `i `uc `i : -> =| _temp -> << -> 1 `i _bitname `uc `i -> =& _temp -> ~ << -> 1 `i _bitname `uc `i ]
[; ;MRF24J40.c: 118: byteWriteSA(addr, temp);
"118
[e ( _byteWriteSA (2 , _addr _temp ]
[; ;MRF24J40.c: 119: }
"119
[e :UE 130 ]
}
"121
[v _dataReadSA `(v ~T0 @X0 1 ef3`uc`uc`*uc ]
{
[; ;MRF24J40.c: 121: void dataReadSA(uint8_t addr, uint8_t num, uint8_t *buffer) {
[e :U _dataReadSA ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _num `uc ~T0 @X0 1 r2 ]
[v _buffer `*uc ~T0 @X0 1 r3 ]
[f ]
[; ;MRF24J40.c: 122: chipSelect();
"122
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 124: for(int i= num; i>0; i--){
"124
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> _num `i ]
[e $ > _i -> 0 `i 132  ]
[e $U 133  ]
[e :U 132 ]
{
[; ;MRF24J40.c: 125: addrWriteSA(addr++, 1);
"125
[e ( _addrWriteSA (2 , ++ _addr -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;MRF24J40.c: 127: *buffer++ = SSPBUF;
"127
[e = *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x _SSPBUF ]
[; ;MRF24J40.c: 128: waitForSPI();
"128
[e ( _waitForSPI ..  ]
"129
}
"124
[e -- _i -> 1 `i ]
[e $ > _i -> 0 `i 132  ]
[e :U 133 ]
"129
}
[; ;MRF24J40.c: 129: }
[; ;MRF24J40.c: 130: chipRelease();
"130
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 131: }
"131
[e :UE 131 ]
}
"133
[v _dataWriteSA `(v ~T0 @X0 1 ef3`uc`uc`*uc ]
{
[; ;MRF24J40.c: 133: void dataWriteSA(uint8_t addr, uint8_t num, uint8_t *buffer) {
[e :U _dataWriteSA ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _num `uc ~T0 @X0 1 r2 ]
[v _buffer `*uc ~T0 @X0 1 r3 ]
[f ]
[; ;MRF24J40.c: 134: chipSelect();
"134
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 135: addrWriteSA(addr, 0);
"135
[e ( _addrWriteSA (2 , _addr -> -> 0 `i `uc ]
[; ;MRF24J40.c: 136: for(int i= num; i>0; i--){
"136
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> _num `i ]
[e $ > _i -> 0 `i 136  ]
[e $U 137  ]
[e :U 136 ]
{
[; ;MRF24J40.c: 137: SSPBUF= *buffer++;
"137
[e = _SSPBUF *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x ]
[; ;MRF24J40.c: 138: waitForSPI();
"138
[e ( _waitForSPI ..  ]
"139
}
"136
[e -- _i -> 1 `i ]
[e $ > _i -> 0 `i 136  ]
[e :U 137 ]
"139
}
[; ;MRF24J40.c: 139: }
[; ;MRF24J40.c: 140: chipRelease();
"140
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 141: }
"141
[e :UE 135 ]
}
"143
[v _byteReadLA `(uc ~T0 @X0 1 ef1`ui ]
{
[; ;MRF24J40.c: 143: uint8_t byteReadLA(uint16_t addr) {
[e :U _byteReadLA ]
[v _addr `ui ~T0 @X0 1 r1 ]
[f ]
"144
[v _report `uc ~T0 @X0 1 a ]
[; ;MRF24J40.c: 144: uint8_t report;
[; ;MRF24J40.c: 145: chipSelect();
"145
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 146: addrWriteLA(addr, 1);
"146
[e ( _addrWriteLA (2 , _addr -> -> 1 `i `uc ]
[; ;MRF24J40.c: 147: report= SSPBUF;
"147
[e = _report _SSPBUF ]
[; ;MRF24J40.c: 148: chipRelease();
"148
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 149: return report;
"149
[e ) _report ]
[e $UE 139  ]
[; ;MRF24J40.c: 150: }
"150
[e :UE 139 ]
}
"152
[v _byteWriteLA `(v ~T0 @X0 1 ef2`ui`uc ]
{
[; ;MRF24J40.c: 152: void byteWriteLA(uint16_t addr, uint8_t data){
[e :U _byteWriteLA ]
[v _addr `ui ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
[; ;MRF24J40.c: 153: chipSelect();
"153
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 154: addrWriteLA(addr, 0);
"154
[e ( _addrWriteLA (2 , _addr -> -> 0 `i `uc ]
[; ;MRF24J40.c: 155: SSPBUF= data;
"155
[e = _SSPBUF _data ]
[; ;MRF24J40.c: 156: waitForSPI();
"156
[e ( _waitForSPI ..  ]
[; ;MRF24J40.c: 157: chipRelease();
"157
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 158: }
"158
[e :UE 140 ]
}
"160
[v _bitWriteLA `(v ~T0 @X0 1 ef3`ui`uc`uc ]
{
[; ;MRF24J40.c: 160: void bitWriteLA(uint16_t addr, uint8_t bitname, bool state) {
[e :U _bitWriteLA ]
[v _addr `ui ~T0 @X0 1 r1 ]
[v _bitname `uc ~T0 @X0 1 r2 ]
[v _state `uc ~T0 @X0 1 r3 ]
[f ]
"161
[v _temp `uc ~T0 @X0 1 a ]
[; ;MRF24J40.c: 161: uint8_t temp= byteReadLA(addr);
[e = _temp ( _byteReadLA (1 _addr ]
[; ;MRF24J40.c: 162: state?(temp|=(1<<bitname)):(temp&=~(1<<bitname));
"162
[e ? != -> _state `i -> -> -> 0 `i `uc `i : -> =| _temp -> << -> 1 `i _bitname `uc `i -> =& _temp -> ~ << -> 1 `i _bitname `uc `i ]
[; ;MRF24J40.c: 163: byteWriteLA(addr, temp);
"163
[e ( _byteWriteLA (2 , _addr _temp ]
[; ;MRF24J40.c: 164: }
"164
[e :UE 141 ]
}
"166
[v _dataReadLA `(v ~T0 @X0 1 ef3`ui`uc`*uc ]
{
[; ;MRF24J40.c: 166: void dataReadLA(uint16_t addr, uint8_t num, uint8_t *buffer) {
[e :U _dataReadLA ]
[v _addr `ui ~T0 @X0 1 r1 ]
[v _num `uc ~T0 @X0 1 r2 ]
[v _buffer `*uc ~T0 @X0 1 r3 ]
[f ]
[; ;MRF24J40.c: 167: chipSelect();
"167
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 169: for(int i= num; i>0; i--){
"169
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> _num `i ]
[e $ > _i -> 0 `i 143  ]
[e $U 144  ]
[e :U 143 ]
{
[; ;MRF24J40.c: 170: addrWriteLA(addr++, 1);
"170
[e ( _addrWriteLA (2 , ++ _addr -> -> 1 `i `ui -> -> 1 `i `uc ]
[; ;MRF24J40.c: 172: *buffer++ = SSPBUF;
"172
[e = *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x _SSPBUF ]
[; ;MRF24J40.c: 173: waitForSPI();
"173
[e ( _waitForSPI ..  ]
"174
}
"169
[e -- _i -> 1 `i ]
[e $ > _i -> 0 `i 143  ]
[e :U 144 ]
"174
}
[; ;MRF24J40.c: 174: }
[; ;MRF24J40.c: 175: chipRelease();
"175
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 176: }
"176
[e :UE 142 ]
}
"178
[v _dataWriteLA `(v ~T0 @X0 1 ef3`ui`uc`*uc ]
{
[; ;MRF24J40.c: 178: void dataWriteLA(uint16_t addr, uint8_t num, uint8_t *buffer) {
[e :U _dataWriteLA ]
[v _addr `ui ~T0 @X0 1 r1 ]
[v _num `uc ~T0 @X0 1 r2 ]
[v _buffer `*uc ~T0 @X0 1 r3 ]
[f ]
[; ;MRF24J40.c: 179: chipSelect();
"179
[e ( _chipSelect ..  ]
[; ;MRF24J40.c: 180: addrWriteLA(addr, 0);
"180
[e ( _addrWriteLA (2 , _addr -> -> 0 `i `uc ]
[; ;MRF24J40.c: 181: for(int i= num; i>0; i--){
"181
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> _num `i ]
[e $ > _i -> 0 `i 147  ]
[e $U 148  ]
[e :U 147 ]
{
[; ;MRF24J40.c: 182: SSPBUF= *buffer++;
"182
[e = _SSPBUF *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x ]
[; ;MRF24J40.c: 183: waitForSPI();
"183
[e ( _waitForSPI ..  ]
"184
}
"181
[e -- _i -> 1 `i ]
[e $ > _i -> 0 `i 147  ]
[e :U 148 ]
"184
}
[; ;MRF24J40.c: 184: }
[; ;MRF24J40.c: 185: chipRelease();
"185
[e ( _chipRelease ..  ]
[; ;MRF24J40.c: 186: }
"186
[e :UE 146 ]
}
[; ;MRF24J40.c: 191: void deviceReset();
"192
[v _deviceInit `(v ~T0 @X0 1 ef ]
{
[; ;MRF24J40.c: 192: void deviceInit() {
[e :U _deviceInit ]
[f ]
[; ;MRF24J40.c: 193: SPI_Init();
"193
[e ( _SPI_Init ..  ]
[; ;MRF24J40.c: 195: }
"195
[e :UE 150 ]
}
[; ;MRF24J40.c: 196: void deviceSetInterrupt(uint8_t val, bool state);
[; ;MRF24J40.c: 197: void channelSelect(uint8_t chan);
[; ;MRF24J40.c: 198: void clearChannelAssesstment(uint8_t val);
[; ;MRF24J40.c: 199: void setRSSIMode(uint8_t val);
[; ;MRF24J40.c: 200: uint8_t readRSSI();
[; ;MRF24J40.c: 201: void deviceSetAddress(uint32_t addr_H, uint32_t addr_L);
[; ;MRF24J40.c: 202: void deviceSetShortAddress(uint8_t addr);
[; ;MRF24J40.c: 203: void setBattThreshold(uint8_t);
[; ;MRF24J40.c: 204: void battLifeExt();
[; ;MRF24J40.c: 205: void noBattLifeExt();
"217
[v _setSecurityChipher `(v ~T0 @X0 1 ef1`uc ]
{
[; ;MRF24J40.c: 217: void setSecurityChipher(uint8_t chipher){
[e :U _setSecurityChipher ]
[v _chipher `uc ~T0 @X0 1 r1 ]
[f ]
[; ;MRF24J40.c: 218: if(!(chipher < 8)) {_fassert(218, "MRF24J40.c", "chipher < 8");};
"218
[e $ ! ! < -> _chipher `i -> 8 `i 152  ]
{
[e ( __fassert (3 , , -> 218 `i :s 5C :s 6C ]
}
[e :U 152 ]
[; ;MRF24J40.c: 220: }
"220
[e :UE 151 ]
}
[; ;MRF24J40.c: 225: void macBeaconOrder(uint8_t val);
[; ;MRF24J40.c: 226: void macSuperframeOrder(uint8_t val);
[; ;MRF24J40.c: 227: void macMinBE(uint8_t val);
[; ;MRF24J40.c: 228: void macMaxCSMABackoff(uint8_t val);
[; ;MRF24J40.c: 229: void macAckWaitDuration(uint8_t val);
[a 1C 77 82 70 50 52 74 52 48 46 99 0 ]
[a 3C 77 82 70 50 52 74 52 48 46 99 0 ]
[a 5C 77 82 70 50 52 74 52 48 46 99 0 ]
[a 4C 97 100 100 114 32 60 32 48 120 51 56 70 0 ]
[a 2C 97 100 100 114 32 60 32 48 120 51 70 0 ]
[a 6C 99 104 105 112 104 101 114 32 60 32 56 0 ]
