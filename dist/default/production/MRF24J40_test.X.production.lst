

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Fri May 23 21:54:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  008E                     	;# 
    54  008F                     	;# 
    55  0090                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009B                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  009F                     	;# 
    66  0105                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126                           
   127                           	psect	idataBANK0
   128  06A2                     __pidataBANK0:	
   129                           
   130                           ;initializer for _aMinLIFSPeriod
   131  06A2  3428               	retlw	40
   132                           
   133                           ;initializer for _aMinSIFSPeriod
   134  06A3  340C               	retlw	12
   135                           
   136                           	psect	idataCOMMON
   137  06A1                     __pidataCOMMON:	
   138                           
   139                           ;initializer for _aTurnaroundTime
   140  06A1  340C               	retlw	12
   141  0006                     _PORTB	set	6
   142  0006                     _PORTBbits	set	6
   143  0013                     _SSPBUF	set	19
   144  0014                     _SSPCONbits	set	20
   145  0094                     _SSPSTATbits	set	148
   146  0086                     _TRISB	set	134
   147                           
   148                           	psect	cinit
   149  07F0                     start_initialization:	
   150                           ; #config settings
   151                           
   152  07F0                     __initialization:	
   153                           
   154                           ; Initialize objects allocated to BANK0
   155  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   156  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   157  07F2  118A  26A2  118A   	fcall	__pidataBANK0	;fetch initializer
   158  07F5  00A0               	movwf	__pdataBANK0& (0+127)
   159  07F6  118A  26A3  118A   	fcall	__pidataBANK0+1	;fetch initializer
   160  07F9  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   161                           
   162                           ; Initialize objects allocated to COMMON
   163  07FA  118A  26A1         	fcall	__pidataCOMMON	;fetch initializer
   164  07FC  00FD               	movwf	__pdataCOMMON& (0+127)
   165  07FD                     end_of_initialization:	
   166                           ;End of C runtime variable initialization code
   167                           
   168  07FD                     __end_of__initialization:	
   169  07FD  0183               	clrf	3
   170  07FE  118A  2EB0         	ljmp	_main	;jump to C main() function
   171                           
   172                           	psect	dataCOMMON
   173  007D                     __pdataCOMMON:	
   174  007D                     _aTurnaroundTime:	
   175  007D                     	ds	1
   176                           
   177                           	psect	dataBANK0
   178  0020                     __pdataBANK0:	
   179  0020                     _aMinLIFSPeriod:	
   180  0020                     	ds	1
   181  0021                     _aMinSIFSPeriod:	
   182  0021                     	ds	1
   183                           
   184                           	psect	cstackCOMMON
   185  0070                     __pcstackCOMMON:	
   186  0070                     ?_deviceInit:	
   187  0070                     ?_main:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_SPI_Init:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ??_SPI_Init:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ?_chipSelect:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0070                     ??_chipSelect:	
   200                           ; 0 bytes @ 0x0
   201                           
   202  0070                     ?_chipRelease:	
   203                           ; 0 bytes @ 0x0
   204                           
   205  0070                     ??_chipRelease:	
   206                           ; 0 bytes @ 0x0
   207                           
   208  0070                     ?_waitForSPI:	
   209                           ; 0 bytes @ 0x0
   210                           
   211  0070                     ??_waitForSPI:	
   212                           ; 0 bytes @ 0x0
   213                           
   214  0070                     ?_addrWriteLA:	
   215                           ; 0 bytes @ 0x0
   216                           
   217  0070                     ?_readRSSI:	
   218                           ; 0 bytes @ 0x0
   219                           
   220  0070                     addrWriteLA@addr:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 2 bytes @ 0x0
   225  0070                     	ds	2
   226  0072                     addrWriteLA@op:	
   227                           
   228                           ; 1 bytes @ 0x2
   229  0072                     	ds	1
   230  0073                     ??_addrWriteLA:	
   231                           
   232                           ; 0 bytes @ 0x3
   233  0073                     	ds	4
   234  0077                     addrWriteLA@command:	
   235                           
   236                           ; 2 bytes @ 0x7
   237  0077                     	ds	1
   238  0078                     ??_deviceInit:	
   239                           
   240                           ; 0 bytes @ 0x8
   241  0078                     	ds	1
   242  0079                     ?_byteReadLA:	
   243  0079                     byteReadLA@addr:	
   244                           ; 1 bytes @ 0x9
   245                           
   246                           
   247                           ; 2 bytes @ 0x9
   248  0079                     	ds	2
   249  007B                     ??_byteReadLA:	
   250                           
   251                           ; 0 bytes @ 0xB
   252  007B                     	ds	1
   253  007C                     byteReadLA@report:	
   254                           
   255                           ; 1 bytes @ 0xC
   256  007C                     	ds	1
   257  007D                     ??_readRSSI:	
   258  007D                     ??_main:	
   259                           ; 0 bytes @ 0xD
   260                           
   261                           
   262                           	psect	maintext
   263  06B0                     __pmaintext:	
   264                           ; 0 bytes @ 0xD
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 46 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;		None               void
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, pclath, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : 17F/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   284 ;;      Params:         0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0
   286 ;;      Temps:          0       0       0       0       0
   287 ;;      Totals:         0       0       0       0       0
   288 ;;Total ram usage:        0 bytes
   289 ;; Hardware stack levels required when called:    4
   290 ;; This function calls:
   291 ;;		_deviceInit
   292 ;;		_readRSSI
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           
   299                           ;psect for function _main
   300  06B0                     _main:	
   301                           
   302                           ;main.c: 47: deviceInit();
   303                           
   304                           ;incstack = 0
   305                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   306  06B0  118A  278C  118A   	fcall	_deviceInit
   307                           
   308                           ;main.c: 50: readRSSI();
   309  06B3  118A  26A9  118A   	fcall	_readRSSI
   310  06B6                     l28:	
   311                           ;main.c: 52: while (1) {
   312                           
   313  06B6  2EB6               	goto	l28
   314  06B7                     __end_of_main:	
   315                           
   316                           	psect	text1
   317  06A9                     __ptext1:	
   318 ;; *************** function _readRSSI *****************
   319 ;; Defined at:
   320 ;;		line 224 in file "MRF24J40.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      unsigned char 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, pclath, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels used:    1
   340 ;; Hardware stack levels required when called:    3
   341 ;; This function calls:
   342 ;;		_byteReadLA
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           
   349                           ;psect for function _readRSSI
   350  06A9                     _readRSSI:	
   351                           
   352                           ;MRF24J40.c: 225: return byteReadLA(0x210);
   353                           ;	Return value of _readRSSI is never used
   354                           
   355                           ;incstack = 0
   356                           ; Regs used in _readRSSI: [wreg+status,2+status,0+pclath+cstack]
   357  06A9  3010               	movlw	16
   358  06AA  00F9               	movwf	byteReadLA@addr
   359  06AB  3002               	movlw	2
   360  06AC  00FA               	movwf	byteReadLA@addr+1
   361  06AD  118A  26E0         	fcall	_byteReadLA
   362  06AF  0008               	return
   363  06B0                     __end_of_readRSSI:	
   364                           
   365                           	psect	text2
   366  06E0                     __ptext2:	
   367 ;; *************** function _byteReadLA *****************
   368 ;; Defined at:
   369 ;;		line 146 in file "MRF24J40.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;  addr            2    9[COMMON] unsigned int 
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  report          1   12[COMMON] unsigned char 
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      unsigned char 
   376 ;; Registers used:
   377 ;;		wreg, status,2, status,0, pclath, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         2       0       0       0       0
   384 ;;      Locals:         1       0       0       0       0
   385 ;;      Temps:          1       0       0       0       0
   386 ;;      Totals:         4       0       0       0       0
   387 ;;Total ram usage:        4 bytes
   388 ;; Hardware stack levels used:    1
   389 ;; Hardware stack levels required when called:    2
   390 ;; This function calls:
   391 ;;		_addrWriteLA
   392 ;;		_chipRelease
   393 ;;		_chipSelect
   394 ;; This function is called by:
   395 ;;		_readRSSI
   396 ;;		_bitWriteLA
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _byteReadLA
   402  06E0                     _byteReadLA:	
   403                           
   404                           ;MRF24J40.c: 147: uint8_t report;
   405                           ;MRF24J40.c: 148: chipSelect();
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _byteReadLA: [wreg+status,2+status,0+pclath+cstack]
   409  06E0  118A  26CB  118A   	fcall	_chipSelect
   410                           
   411                           ;MRF24J40.c: 149: addrWriteLA(addr, 1);
   412  06E3  087A               	movf	byteReadLA@addr+1,w
   413  06E4  01F1               	clrf	addrWriteLA@addr+1
   414  06E5  07F1               	addwf	addrWriteLA@addr+1,f
   415  06E6  0879               	movf	byteReadLA@addr,w
   416  06E7  01F0               	clrf	addrWriteLA@addr
   417  06E8  07F0               	addwf	addrWriteLA@addr,f
   418  06E9  01F2               	clrf	addrWriteLA@op
   419  06EA  0AF2               	incf	addrWriteLA@op,f
   420  06EB  118A  26F8  118A   	fcall	_addrWriteLA
   421                           
   422                           ;MRF24J40.c: 150: report= SSPBUF;
   423  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   424  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   425  06F0  0813               	movf	19,w	;volatile
   426  06F1  00FB               	movwf	??_byteReadLA
   427  06F2  087B               	movf	??_byteReadLA,w
   428  06F3  00FC               	movwf	byteReadLA@report
   429                           
   430                           ;MRF24J40.c: 151: chipRelease();
   431  06F4  118A  26B7         	fcall	_chipRelease
   432                           
   433                           ;MRF24J40.c: 152: return report;
   434  06F6  087C               	movf	byteReadLA@report,w
   435  06F7  0008               	return
   436  06F8                     __end_of_byteReadLA:	
   437                           
   438                           	psect	text3
   439  06CB                     __ptext3:	
   440 ;; *************** function _chipSelect *****************
   441 ;; Defined at:
   442 ;;		line 22 in file "MRF24J40.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;		None               void
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0
   458 ;;      Temps:          3       0       0       0       0
   459 ;;      Totals:         3       0       0       0       0
   460 ;;Total ram usage:        3 bytes
   461 ;; Hardware stack levels used:    1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_byteReadLA
   466 ;;		_SPI_WriteByte
   467 ;;		_SPI_ReadByte
   468 ;;		_SPI_WriteArray
   469 ;;		_SPI_ReadArray
   470 ;;		_byteReadSA
   471 ;;		_byteWriteSA
   472 ;;		_dataReadSA
   473 ;;		_dataWriteSA
   474 ;;		_byteWriteLA
   475 ;;		_dataReadLA
   476 ;;		_dataWriteLA
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _chipSelect
   482  06CB                     _chipSelect:	
   483                           
   484                           ;MRF24J40.c: 23: PORTB &= ~(1<<PORTBbits.RB5);
   485                           
   486                           ;incstack = 0
   487                           ; Regs used in _chipSelect: [wreg+status,2+status,0]
   488  06CB  3001               	movlw	1
   489  06CC  00F0               	movwf	??_chipSelect
   490  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   491  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   492  06CF  0E06               	swapf	6,w	;volatile
   493  06D0  00F1               	movwf	??_chipSelect+1
   494  06D1  0C71               	rrf	??_chipSelect+1,w
   495  06D2  3901               	andlw	1
   496  06D3  3E01               	addlw	1
   497  06D4  2ED7               	goto	u24
   498  06D5                     u25:	
   499  06D5  1003               	clrc
   500  06D6  0DF0               	rlf	??_chipSelect,f
   501  06D7                     u24:	
   502  06D7  3EFF               	addlw	-1
   503  06D8  1D03               	skipz
   504  06D9  2ED5               	goto	u25
   505  06DA  0870               	movf	??_chipSelect,w
   506  06DB  3AFF               	xorlw	255
   507  06DC  00F2               	movwf	??_chipSelect+2
   508  06DD  0872               	movf	??_chipSelect+2,w
   509  06DE  0586               	andwf	6,f	;volatile
   510  06DF  0008               	return
   511  06E0                     __end_of_chipSelect:	
   512                           
   513                           	psect	text4
   514  06B7                     __ptext4:	
   515 ;; *************** function _chipRelease *****************
   516 ;; Defined at:
   517 ;;		line 26 in file "MRF24J40.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;		None               void
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0
   533 ;;      Temps:          3       0       0       0       0
   534 ;;      Totals:         3       0       0       0       0
   535 ;;Total ram usage:        3 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_byteReadLA
   541 ;;		_SPI_WriteByte
   542 ;;		_SPI_ReadByte
   543 ;;		_SPI_WriteArray
   544 ;;		_SPI_ReadArray
   545 ;;		_byteReadSA
   546 ;;		_byteWriteSA
   547 ;;		_dataReadSA
   548 ;;		_dataWriteSA
   549 ;;		_byteWriteLA
   550 ;;		_dataReadLA
   551 ;;		_dataWriteLA
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _chipRelease
   557  06B7                     _chipRelease:	
   558                           
   559                           ;MRF24J40.c: 27: PORTB |= (1<<PORTBbits.RB5);
   560                           
   561                           ;incstack = 0
   562                           ; Regs used in _chipRelease: [wreg+status,2+status,0]
   563  06B7  3001               	movlw	1
   564  06B8  00F0               	movwf	??_chipRelease
   565  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   566  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   567  06BB  0E06               	swapf	6,w	;volatile
   568  06BC  00F1               	movwf	??_chipRelease+1
   569  06BD  0C71               	rrf	??_chipRelease+1,w
   570  06BE  3901               	andlw	1
   571  06BF  3E01               	addlw	1
   572  06C0  2EC3               	goto	u34
   573  06C1                     u35:	
   574  06C1  1003               	clrc
   575  06C2  0DF0               	rlf	??_chipRelease,f
   576  06C3                     u34:	
   577  06C3  3EFF               	addlw	-1
   578  06C4  1D03               	skipz
   579  06C5  2EC1               	goto	u35
   580  06C6  0870               	movf	??_chipRelease,w
   581  06C7  00F2               	movwf	??_chipRelease+2
   582  06C8  0872               	movf	??_chipRelease+2,w
   583  06C9  0486               	iorwf	6,f	;volatile
   584  06CA  0008               	return
   585  06CB                     __end_of_chipRelease:	
   586                           
   587                           	psect	text5
   588  06F8                     __ptext5:	
   589 ;; *************** function _addrWriteLA *****************
   590 ;; Defined at:
   591 ;;		line 89 in file "MRF24J40.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  addr            2    0[COMMON] unsigned int 
   594 ;;  op              1    2[COMMON] unsigned char 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  command         2    7[COMMON] unsigned int 
   597 ;; Return value:  Size  Location     Type
   598 ;;		None               void
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         3       0       0       0       0
   607 ;;      Locals:         2       0       0       0       0
   608 ;;      Temps:          4       0       0       0       0
   609 ;;      Totals:         9       0       0       0       0
   610 ;;Total ram usage:        9 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    1
   613 ;; This function calls:
   614 ;;		_waitForSPI
   615 ;; This function is called by:
   616 ;;		_byteReadLA
   617 ;;		_byteWriteLA
   618 ;;		_dataReadLA
   619 ;;		_dataWriteLA
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _addrWriteLA
   625  06F8                     _addrWriteLA:	
   626                           
   627                           ;MRF24J40.c: 92: uint16_t command= (op?(((addr<<1)&0b100000000000)|0b000000000001):(((ad
      +                          dr<<1)|0b100000000000 )));
   628                           
   629                           ;incstack = 0
   630                           ; Regs used in _addrWriteLA: [wreg+status,2+status,0+pclath+cstack]
   631  06F8  08F2               	movf	addrWriteLA@op,f
   632  06F9  1D03               	skipz
   633  06FA  2F08               	goto	l649
   634  06FB  0871               	movf	addrWriteLA@addr+1,w
   635  06FC  00F4               	movwf	??_addrWriteLA+1
   636  06FD  0870               	movf	addrWriteLA@addr,w
   637  06FE  00F3               	movwf	??_addrWriteLA
   638  06FF  1003               	clrc
   639  0700  0DF3               	rlf	??_addrWriteLA,f
   640  0701  0DF4               	rlf	??_addrWriteLA+1,f
   641  0702  3000               	movlw	0
   642  0703  0473               	iorwf	??_addrWriteLA,w
   643  0704  00F7               	movwf	addrWriteLA@command
   644  0705  3008               	movlw	8
   645  0706  0474               	iorwf	??_addrWriteLA+1,w
   646  0707  2F1A               	goto	L1
   647  0708                     l649:	
   648  0708  0871               	movf	addrWriteLA@addr+1,w
   649  0709  00F4               	movwf	??_addrWriteLA+1
   650  070A  0870               	movf	addrWriteLA@addr,w
   651  070B  00F3               	movwf	??_addrWriteLA
   652  070C  1003               	clrc
   653  070D  0DF3               	rlf	??_addrWriteLA,f
   654  070E  0DF4               	rlf	??_addrWriteLA+1,f
   655  070F  3000               	movlw	0
   656  0710  0573               	andwf	??_addrWriteLA,w
   657  0711  00F5               	movwf	??_addrWriteLA+2
   658  0712  3008               	movlw	8
   659  0713  0574               	andwf	??_addrWriteLA+1,w
   660  0714  00F6               	movwf	??_addrWriteLA+3
   661  0715  3001               	movlw	1
   662  0716  0475               	iorwf	??_addrWriteLA+2,w
   663  0717  00F7               	movwf	addrWriteLA@command
   664  0718  3000               	movlw	0
   665  0719  0476               	iorwf	??_addrWriteLA+3,w
   666  071A                     L1:	
   667  071A  00F8               	movwf	addrWriteLA@command+1
   668                           
   669                           ;MRF24J40.c: 93: SSPBUF= (command>>8);
   670  071B  0878               	movf	addrWriteLA@command+1,w
   671  071C  1283               	bcf	3,5	;RP0=0, select bank0
   672  071D  1303               	bcf	3,6	;RP1=0, select bank0
   673  071E  0093               	movwf	19	;volatile
   674                           
   675                           ;MRF24J40.c: 94: waitForSPI();
   676  071F  118A  26A4  118A   	fcall	_waitForSPI
   677                           
   678                           ;MRF24J40.c: 95: SSPBUF= (command&0xFF);
   679  0722  0877               	movf	addrWriteLA@command,w
   680  0723  1283               	bcf	3,5	;RP0=0, select bank0
   681  0724  1303               	bcf	3,6	;RP1=0, select bank0
   682  0725  0093               	movwf	19	;volatile
   683                           
   684                           ;MRF24J40.c: 96: waitForSPI();
   685  0726  118A  26A4         	fcall	_waitForSPI
   686  0728  0008               	return
   687  0729                     __end_of_addrWriteLA:	
   688                           
   689                           	psect	text6
   690  06A4                     __ptext6:	
   691 ;; *************** function _waitForSPI *****************
   692 ;; Defined at:
   693 ;;		line 75 in file "MRF24J40.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;		None               void
   700 ;; Registers used:
   701 ;;		None
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_addrWriteLA
   717 ;;		_addrWriteSA
   718 ;;		_byteWriteSA
   719 ;;		_dataReadSA
   720 ;;		_dataWriteSA
   721 ;;		_byteWriteLA
   722 ;;		_dataReadLA
   723 ;;		_dataWriteLA
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _waitForSPI
   729  06A4                     _waitForSPI:	
   730  06A4                     l99:	
   731                           ;MRF24J40.c: 76: while(SSPSTATbits.BF);
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _waitForSPI: []
   735                           
   736  06A4  1683               	bsf	3,5	;RP0=1, select bank1
   737  06A5  1303               	bcf	3,6	;RP1=0, select bank1
   738  06A6  1C14               	btfss	20,0	;volatile
   739  06A7  0008               	return
   740  06A8  2EA4               	goto	l99
   741  06A9                     __end_of_waitForSPI:	
   742                           
   743                           	psect	text7
   744  078C                     __ptext7:	
   745 ;; *************** function _deviceInit *****************
   746 ;; Defined at:
   747 ;;		line 203 in file "MRF24J40.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;		None               void
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          5       0       0       0       0
   764 ;;      Totals:         5       0       0       0       0
   765 ;;Total ram usage:        5 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    1
   768 ;; This function calls:
   769 ;;		_SPI_Init
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _deviceInit
   777  078C                     _deviceInit:	
   778                           
   779                           ;MRF24J40.c: 211: 1?(PORTB|= (1<<PORTBbits.RB6)):(PORTB&=~(1<<PORTBbits.RB6));
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _deviceInit: [wreg+status,2+status,0+pclath+cstack]
   783  078C  3001               	movlw	1
   784  078D  00F8               	movwf	??_deviceInit
   785  078E  1283               	bcf	3,5	;RP0=0, select bank0
   786  078F  1303               	bcf	3,6	;RP1=0, select bank0
   787  0790  0C06               	rrf	6,w	;volatile
   788  0791  00F9               	movwf	??_deviceInit+1
   789  0792  0CF9               	rrf	??_deviceInit+1,f
   790  0793  0C79               	rrf	??_deviceInit+1,w
   791  0794  3901               	andlw	1
   792  0795  3E01               	addlw	1
   793  0796  2F99               	goto	u114
   794  0797                     u115:	
   795  0797  1003               	clrc
   796  0798  0DF8               	rlf	??_deviceInit,f
   797  0799                     u114:	
   798  0799  3EFF               	addlw	-1
   799  079A  1D03               	skipz
   800  079B  2F97               	goto	u115
   801  079C  3001               	movlw	1
   802  079D  00FA               	movwf	??_deviceInit+2
   803  079E  0E06               	swapf	6,w	;volatile
   804  079F  00FB               	movwf	??_deviceInit+3
   805  07A0  0CFB               	rrf	??_deviceInit+3,f
   806  07A1  0C7B               	rrf	??_deviceInit+3,w
   807  07A2  3901               	andlw	1
   808  07A3  3E01               	addlw	1
   809  07A4  2FA7               	goto	u124
   810  07A5                     u125:	
   811  07A5  1003               	clrc
   812  07A6  0DFA               	rlf	??_deviceInit+2,f
   813  07A7                     u124:	
   814  07A7  3EFF               	addlw	-1
   815  07A8  1D03               	skipz
   816  07A9  2FA5               	goto	u125
   817  07AA  087A               	movf	??_deviceInit+2,w
   818  07AB  0478               	iorwf	??_deviceInit,w
   819  07AC  00FC               	movwf	??_deviceInit+4
   820  07AD  087C               	movf	??_deviceInit+4,w
   821  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   822  07AF  1303               	bcf	3,6	;RP1=0, select bank1
   823  07B0  0486               	iorwf	6,f	;volatile
   824  07B1  3001               	movlw	1
   825  07B2  00F8               	movwf	??_deviceInit
   826  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   827  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   828  07B5  0E06               	swapf	6,w	;volatile
   829  07B6  00F9               	movwf	??_deviceInit+1
   830  07B7  0CF9               	rrf	??_deviceInit+1,f
   831  07B8  0C79               	rrf	??_deviceInit+1,w
   832  07B9  3901               	andlw	1
   833  07BA  3E01               	addlw	1
   834  07BB  2FBE               	goto	u134
   835  07BC                     u135:	
   836  07BC  1003               	clrc
   837  07BD  0DF8               	rlf	??_deviceInit,f
   838  07BE                     u134:	
   839  07BE  3EFF               	addlw	-1
   840  07BF  1D03               	skipz
   841  07C0  2FBC               	goto	u135
   842  07C1  0878               	movf	??_deviceInit,w
   843  07C2  00FA               	movwf	??_deviceInit+2
   844  07C3  087A               	movf	??_deviceInit+2,w
   845  07C4  0486               	iorwf	6,f	;volatile
   846  07C5  2FD0               	goto	l171
   847  07C6                     u145:	
   848  07C6  1003               	clrc
   849  07C7  0DF8               	rlf	??_deviceInit,f
   850  07C8  3EFF               	addlw	-1
   851  07C9  1D03               	skipz
   852  07CA  2FC6               	goto	u145
   853  07CB  0878               	movf	??_deviceInit,w
   854  07CC  3AFF               	xorlw	255
   855  07CD  00FA               	movwf	??_deviceInit+2
   856  07CE  087A               	movf	??_deviceInit+2,w
   857  07CF  0586               	andwf	6,f	;volatile
   858  07D0                     l171:	
   859                           ;MRF24J40.c: 212: 1?(PORTB|= (1<<PORTBbits.RB3)):(PORTB&=~(1<<PORTBbits.RB3));
   860                           
   861  07D0  3001               	movlw	1
   862  07D1  00F8               	movwf	??_deviceInit
   863  07D2  0C06               	rrf	6,w	;volatile
   864  07D3  00F9               	movwf	??_deviceInit+1
   865  07D4  0CF9               	rrf	??_deviceInit+1,f
   866  07D5  0C79               	rrf	??_deviceInit+1,w
   867  07D6  3901               	andlw	1
   868  07D7  3E01               	addlw	1
   869  07D8  2FDB               	goto	u154
   870  07D9                     u155:	
   871  07D9  1003               	clrc
   872  07DA  0DF8               	rlf	??_deviceInit,f
   873  07DB                     u154:	
   874  07DB  3EFF               	addlw	-1
   875  07DC  1D03               	skipz
   876  07DD  2FD9               	goto	u155
   877  07DE  0878               	movf	??_deviceInit,w
   878  07DF  00FA               	movwf	??_deviceInit+2
   879  07E0  087A               	movf	??_deviceInit+2,w
   880  07E1  0486               	iorwf	6,f	;volatile
   881  07E2  2FED               	goto	l687
   882  07E3                     u165:	
   883  07E3  1003               	clrc
   884  07E4  0DF8               	rlf	??_deviceInit,f
   885  07E5  3EFF               	addlw	-1
   886  07E6  1D03               	skipz
   887  07E7  2FE3               	goto	u165
   888  07E8  0878               	movf	??_deviceInit,w
   889  07E9  3AFF               	xorlw	255
   890  07EA  00FA               	movwf	??_deviceInit+2
   891  07EB  087A               	movf	??_deviceInit+2,w
   892  07EC  0586               	andwf	6,f	;volatile
   893  07ED                     l687:	
   894                           
   895                           ;MRF24J40.c: 213: SPI_Init();
   896  07ED  118A  2729         	fcall	_SPI_Init
   897  07EF  0008               	return
   898  07F0                     __end_of_deviceInit:	
   899                           
   900                           	psect	text8
   901  0729                     __ptext8:	
   902 ;; *************** function _SPI_Init *****************
   903 ;; Defined at:
   904 ;;		line 8 in file "MRF24J40.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;		None               void
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   918 ;;      Params:         0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0
   920 ;;      Temps:          8       0       0       0       0
   921 ;;      Totals:         8       0       0       0       0
   922 ;;Total ram usage:        8 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_deviceInit
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _SPI_Init
   933  0729                     _SPI_Init:	
   934                           
   935                           ;MRF24J40.c: 11: TRISB&= ~(1 << PORTBbits.RB5)&~(1<<PORTBbits.RB2)&~(1<<PORTBbits.RB4);
   936                           
   937                           ;incstack = 0
   938                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
   939  0729  3001               	movlw	1
   940  072A  00F0               	movwf	??_SPI_Init
   941  072B  1283               	bcf	3,5	;RP0=0, select bank0
   942  072C  1303               	bcf	3,6	;RP1=0, select bank0
   943  072D  0E06               	swapf	6,w	;volatile
   944  072E  3901               	andlw	1
   945  072F  3E01               	addlw	1
   946  0730  2F33               	goto	u54
   947  0731                     u55:	
   948  0731  1003               	clrc
   949  0732  0DF0               	rlf	??_SPI_Init,f
   950  0733                     u54:	
   951  0733  3EFF               	addlw	-1
   952  0734  1D03               	skipz
   953  0735  2F31               	goto	u55
   954  0736  0870               	movf	??_SPI_Init,w
   955  0737  3AFF               	xorlw	255
   956  0738  00F1               	movwf	??_SPI_Init+1
   957  0739  3001               	movlw	1
   958  073A  00F2               	movwf	??_SPI_Init+2
   959  073B  0C06               	rrf	6,w	;volatile
   960  073C  00F3               	movwf	??_SPI_Init+3
   961  073D  0C73               	rrf	??_SPI_Init+3,w
   962  073E  3901               	andlw	1
   963  073F  3E01               	addlw	1
   964  0740  2F43               	goto	u64
   965  0741                     u65:	
   966  0741  1003               	clrc
   967  0742  0DF2               	rlf	??_SPI_Init+2,f
   968  0743                     u64:	
   969  0743  3EFF               	addlw	-1
   970  0744  1D03               	skipz
   971  0745  2F41               	goto	u65
   972  0746  0872               	movf	??_SPI_Init+2,w
   973  0747  3AFF               	xorlw	255
   974  0748  00F4               	movwf	??_SPI_Init+4
   975  0749  3001               	movlw	1
   976  074A  00F5               	movwf	??_SPI_Init+5
   977  074B  0E06               	swapf	6,w	;volatile
   978  074C  00F6               	movwf	??_SPI_Init+6
   979  074D  0C76               	rrf	??_SPI_Init+6,w
   980  074E  3901               	andlw	1
   981  074F  3E01               	addlw	1
   982  0750  2F53               	goto	u74
   983  0751                     u75:	
   984  0751  1003               	clrc
   985  0752  0DF5               	rlf	??_SPI_Init+5,f
   986  0753                     u74:	
   987  0753  3EFF               	addlw	-1
   988  0754  1D03               	skipz
   989  0755  2F51               	goto	u75
   990  0756  0875               	movf	??_SPI_Init+5,w
   991  0757  3AFF               	xorlw	255
   992  0758  0574               	andwf	??_SPI_Init+4,w
   993  0759  0571               	andwf	??_SPI_Init+1,w
   994  075A  00F7               	movwf	??_SPI_Init+7
   995  075B  0877               	movf	??_SPI_Init+7,w
   996  075C  1683               	bsf	3,5	;RP0=1, select bank1
   997  075D  1303               	bcf	3,6	;RP1=0, select bank1
   998  075E  0586               	andwf	6,f	;volatile
   999                           
  1000                           ;MRF24J40.c: 12: TRISB|= (1 << PORTBbits.RB1);
  1001  075F  3001               	movlw	1
  1002  0760  00F0               	movwf	??_SPI_Init
  1003  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0763  0C06               	rrf	6,w	;volatile
  1006  0764  3901               	andlw	1
  1007  0765  3E01               	addlw	1
  1008  0766  2F69               	goto	u84
  1009  0767                     u85:	
  1010  0767  1003               	clrc
  1011  0768  0DF0               	rlf	??_SPI_Init,f
  1012  0769                     u84:	
  1013  0769  3EFF               	addlw	-1
  1014  076A  1D03               	skipz
  1015  076B  2F67               	goto	u85
  1016  076C  0870               	movf	??_SPI_Init,w
  1017  076D  00F1               	movwf	??_SPI_Init+1
  1018  076E  0871               	movf	??_SPI_Init+1,w
  1019  076F  1683               	bsf	3,5	;RP0=1, select bank1
  1020  0770  1303               	bcf	3,6	;RP1=0, select bank1
  1021  0771  0486               	iorwf	6,f	;volatile
  1022                           
  1023                           ;MRF24J40.c: 13: PORTB|= (1 << PORTBbits.RB5);
  1024  0772  3001               	movlw	1
  1025  0773  00F0               	movwf	??_SPI_Init
  1026  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0776  0E06               	swapf	6,w	;volatile
  1029  0777  00F1               	movwf	??_SPI_Init+1
  1030  0778  0C71               	rrf	??_SPI_Init+1,w
  1031  0779  3901               	andlw	1
  1032  077A  3E01               	addlw	1
  1033  077B  2F7E               	goto	u94
  1034  077C                     u95:	
  1035  077C  1003               	clrc
  1036  077D  0DF0               	rlf	??_SPI_Init,f
  1037  077E                     u94:	
  1038  077E  3EFF               	addlw	-1
  1039  077F  1D03               	skipz
  1040  0780  2F7C               	goto	u95
  1041  0781  0870               	movf	??_SPI_Init,w
  1042  0782  00F2               	movwf	??_SPI_Init+2
  1043  0783  0872               	movf	??_SPI_Init+2,w
  1044  0784  0486               	iorwf	6,f	;volatile
  1045                           
  1046                           ;MRF24J40.c: 16: SSPCONbits.SSPEN= 1;
  1047  0785  1694               	bsf	20,5	;volatile
  1048                           
  1049                           ;MRF24J40.c: 17: SSPCONbits.SSPM0= 1;
  1050  0786  1414               	bsf	20,0	;volatile
  1051                           
  1052                           ;MRF24J40.c: 18: SSPSTATbits.SMP= 1;
  1053  0787  1683               	bsf	3,5	;RP0=1, select bank1
  1054  0788  1303               	bcf	3,6	;RP1=0, select bank1
  1055  0789  1794               	bsf	20,7	;volatile
  1056                           
  1057                           ;MRF24J40.c: 19: SSPSTATbits.CKE= 0;
  1058  078A  1314               	bcf	20,6	;volatile
  1059  078B  0008               	return
  1060  078C                     __end_of_SPI_Init:	
  1061  007E                     btemp	set	126	;btemp
  1062  007E                     wtemp	set	126
  1063  007E                     wtemp0	set	126
  1064  0080                     wtemp1	set	128
  1065  0082                     wtemp2	set	130
  1066  0084                     wtemp3	set	132
  1067  0086                     wtemp4	set	134
  1068  0088                     wtemp5	set	136
  1069  007F                     wtemp6	set	127
  1070  007E                     ttemp	set	126
  1071  007E                     ttemp0	set	126
  1072  0081                     ttemp1	set	129
  1073  0084                     ttemp2	set	132
  1074  0087                     ttemp3	set	135
  1075  007F                     ttemp4	set	127
  1076  007E                     ltemp	set	126
  1077  007E                     ltemp0	set	126
  1078  0082                     ltemp1	set	130
  1079  0086                     ltemp2	set	134
  1080  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_deviceInit
    _readRSSI->_byteReadLA
    _byteReadLA->_addrWriteLA
    _deviceInit->_SPI_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     535
                         _deviceInit
                           _readRSSI
 ---------------------------------------------------------------------------------
 (1) _readRSSI                                             0     0      0     535
                         _byteReadLA
 ---------------------------------------------------------------------------------
 (2) _byteReadLA                                           4     2      2     535
                                              9 COMMON     4     2      2
                        _addrWriteLA
                        _chipRelease
                         _chipSelect
 ---------------------------------------------------------------------------------
 (3) _chipSelect                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _chipRelease                                          3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _addrWriteLA                                          9     6      3     419
                                              0 COMMON     9     6      3
                         _waitForSPI
 ---------------------------------------------------------------------------------
 (4) _waitForSPI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _deviceInit                                           5     5      0       0
                                              8 COMMON     5     5      0
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _deviceInit
     _SPI_Init
   _readRSSI
     _byteReadLA
       _addrWriteLA
         _waitForSPI
       _chipRelease
       _chipSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       2       5        2.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Fri May 23 21:54:15 2014

            _SSPSTATbits 0094                       l28 06B6                       l99 06A4  
                     u24 06D7                       u25 06D5                       u34 06C3  
                     u35 06C1                       u54 0733                       u55 0731  
                     u64 0743                       u65 0741                       u74 0753  
                     u75 0751                       u84 0769                       u85 0767  
                     u94 077E                       u95 077C                      l171 07D0  
                    l649 0708                      l687 07ED                      u114 0799  
                    u115 0797                      u124 07A7                      u125 07A5  
                    u134 07BE                      u135 07BC                      u145 07C6  
                    u154 07DB                      u155 07D9                      u165 07E3  
   __size_of_addrWriteLA 0031                     _main 06B0                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086         __end_of_SPI_Init 078C                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F     __size_of_chipRelease 0014       addrWriteLA@command 0077  
        __initialization 07F0             __end_of_main 06B7                   ??_main 007D  
                 _SSPBUF 0013         __end_of_readRSSI 06B0           byteReadLA@addr 0079  
           __pdataCOMMON 007D  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK0 06A2                ?_SPI_Init 0070               _chipSelect 06CB  
             __pmaintext 06B0               _deviceInit 078C               ??_SPI_Init 0070  
          ??_addrWriteLA 0073                ?_readRSSI 0070               _byteReadLA 06E0  
                __ptext1 06A9                  __ptext2 06E0                  __ptext3 06CB  
                __ptext4 06B7                  __ptext5 06F8                  __ptext6 06A4  
                __ptext7 078C                  __ptext8 0729     end_of_initialization 07FD  
          ??_chipRelease 0070               ??_readRSSI 007D              ?_chipSelect 0070  
    __end_of_addrWriteLA 0729               _waitForSPI 06A4              ?_deviceInit 0070  
              _PORTBbits 0006          addrWriteLA@addr 0070          _aTurnaroundTime 007D  
            ?_byteReadLA 0079      __end_of_chipRelease 06CB            __pidataCOMMON 06A1  
      __size_of_SPI_Init 0063      start_initialization 07F0      __size_of_chipSelect 0015  
            _addrWriteLA 06F8      __size_of_deviceInit 0064              ?_waitForSPI 0070  
            __pdataBANK0 0020                ___latbits 0001      __size_of_byteReadLA 0018  
            _chipRelease 06B7        __size_of_readRSSI 0007      __size_of_waitForSPI 0005  
           ??_chipSelect 0070             ??_deviceInit 0078                 _SPI_Init 0729  
     __end_of_chipSelect 06E0           _aMinLIFSPeriod 0020       __end_of_deviceInit 07F0  
           ??_byteReadLA 007B       __end_of_byteReadLA 06F8           _aMinSIFSPeriod 0021  
           ?_addrWriteLA 0070                 _readRSSI 06A9            __size_of_main 0007  
           ??_waitForSPI 0070            addrWriteLA@op 0072       __end_of_waitForSPI 06A9  
       byteReadLA@report 007C             ?_chipRelease 0070               _SSPCONbits 0014  
